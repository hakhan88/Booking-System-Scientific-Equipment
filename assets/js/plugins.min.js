(function (e, t, n) {
    function f(e) {
        var t = {},
            r = /^jQuery\d+$/;
        n.each(e.attributes, function (e, n) {
            if (n.specified && !r.test(n.name)) {
                t[n.name] = n.value
            }
        });
        return t
    }

    function l(e, r) {
        var i = this,
            s = n(i);
        if (i.value == s.attr("placeholder") && s.hasClass("placeholder")) {
            if (s.data("placeholder-password")) {
                s = s.hide().next().show().attr("id", s.removeAttr("id").data("placeholder-id"));
                if (e === true) {
                    return s[0].value = r
                }
                s.focus()
            } else {
                i.value = "";
                s.removeClass("placeholder");
                i == t.activeElement && i.select()
            }
        }
    }

    function c() {
        var e, t = this,
            r = n(t),
            i = r,
            s = this.id;
        if (t.value == "") {
            if (t.type == "password") {
                if (!r.data("placeholder-textinput")) {
                    try {
                        e = r.clone().attr({
                            type: "text"
                        })
                    } catch (o) {
                        e = n("<input>").attr(n.extend(f(this), {
                            type: "text"
                        }))
                    }
                    e.removeAttr("name").data({
                        "placeholder-password": true,
                        "placeholder-id": s
                    }).bind("focus.placeholder", l);
                    r.data({
                        "placeholder-textinput": e,
                        "placeholder-id": s
                    }).before(e)
                }
                r = r.removeAttr("id").hide().prev().attr("id", s).show()
            }
            r.addClass("placeholder");
            r[0].value = r.attr("placeholder")
        } else {
            r.removeClass("placeholder")
        }
    }
    var r = "placeholder" in t.createElement("input"),
        i = "placeholder" in t.createElement("textarea"),
        s = n.fn,
        o = n.valHooks,
        u, a;
    if (r && i) {
        a = s.placeholder = function () {
            return this
        };
        a.input = a.textarea = true
    } else {
        a = s.placeholder = function () {
            var e = this;
            e.filter((r ? "textarea" : ":input") + "[placeholder]").not(".placeholder").bind({
                "focus.placeholder": l,
                "blur.placeholder": c
            }).data("placeholder-enabled", true).trigger("blur.placeholder");
            return e
        };
        a.input = r;
        a.textarea = i;
        u = {
            get: function (e) {
                var t = n(e);
                return t.data("placeholder-enabled") && t.hasClass("placeholder") ? "" : e.value
            },
            set: function (e, r) {
                var i = n(e);
                if (!i.data("placeholder-enabled")) {
                    return e.value = r
                }
                if (r == "") {
                    e.value = r;
                    if (e != t.activeElement) {
                        c.call(e)
                    }
                } else {
                    if (i.hasClass("placeholder")) {
                        l.call(e, true, r) || (e.value = r)
                    } else {
                        e.value = r
                    }
                }
                return i
            }
        };
        r || (o.input = u);
        i || (o.textarea = u);
        n(function () {
            n(t).delegate("form", "submit.placeholder", function () {
                var e = n(".placeholder", this).each(l);
                setTimeout(function () {
                    e.each(c)
                }, 10)
            })
        });
        n(e).bind("beforeunload.placeholder", function () {
            n(".placeholder").each(function () {
                this.value = ""
            })
        })
    }
})(this, document, jQuery);
(function () {
    var e;
    var t = function () { };
    var n = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeline", "timelineEnd", "timeStamp", "trace", "warn"];
    var r = n.length;
    var i = window.console = window.console || {};
    while (r--) {
        e = n[r];
        if (!i[e]) {
            i[e] = t
        }
    }
})();
(function (e, t) {
    if (typeof exports === "object" && exports) {
        t(exports)
    } else {
        var n = {};
        t(n);
        if (typeof define === "function" && define.amd) {
            define(n)
        } else {
            e.Mustache = n
        }
    }
})(this, function (e) {
    function a(e, t) {
        return u.call(e, t)
    }

    function f(e) {
        return !a(r, e)
    }

    function h(e) {
        return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
    }

    function d(e) {
        return String(e).replace(/[&<>"'\/]/g, function (e) {
            return p[e]
        })
    }

    function v(e) {
        this.string = e;
        this.tail = e;
        this.pos = 0
    }

    function m(e, t) {
        this.view = e || {};
        this.parent = t;
        this._cache = {}
    }

    function g() {
        this.clearCache()
    }

    function y(t, n, r, i) {
        var s = "";
        var o, u, a;
        for (var f = 0, l = t.length; f < l; ++f) {
            o = t[f];
            u = o[1];
            switch (o[0]) {
                case "#":
                    a = r.lookup(u);
                    if (typeof a === "object") {
                        if (c(a)) {
                            for (var h = 0, p = a.length; h < p; ++h) {
                                s += y(o[4], n, r.push(a[h]), i)
                            }
                        } else if (a) {
                            s += y(o[4], n, r.push(a), i)
                        }
                    } else if (typeof a === "function") {
                        var d = i == null ? null : i.slice(o[3], o[5]);
                        a = a.call(r.view, d, function (e) {
                            return n.render(e, r)
                        });
                        if (a != null) s += a
                    } else if (a) {
                        s += y(o[4], n, r, i)
                    }
                    break;
                case "^":
                    a = r.lookup(u);
                    if (!a || c(a) && a.length === 0) {
                        s += y(o[4], n, r, i)
                    }
                    break;
                case ">":
                    a = n.getPartial(u);
                    if (typeof a === "function") s += a(r);
                    break;
                case "&":
                    a = r.lookup(u);
                    if (a != null) s += a;
                    break;
                case "name":
                    a = r.lookup(u);
                    if (a != null) s += e.escape(a);
                    break;
                case "text":
                    s += u;
                    break
            }
        }
        return s
    }

    function b(e) {
        var t = [];
        var n = t;
        var r = [];
        var i;
        for (var s = 0, o = e.length; s < o; ++s) {
            i = e[s];
            switch (i[0]) {
                case "#":
                case "^":
                    r.push(i);
                    n.push(i);
                    n = i[4] = [];
                    break;
                case "/":
                    var u = r.pop();
                    u[5] = i[2];
                    n = r.length > 0 ? r[r.length - 1][4] : t;
                    break;
                default:
                    n.push(i)
            }
        }
        return t
    }

    function w(e) {
        var t = [];
        var n, r;
        for (var i = 0, s = e.length; i < s; ++i) {
            n = e[i];
            if (n) {
                if (n[0] === "text" && r && r[0] === "text") {
                    r[1] += n[1];
                    r[3] = n[3]
                } else {
                    r = n;
                    t.push(n)
                }
            }
        }
        return t
    }

    function E(e) {
        return [new RegExp(h(e[0]) + "\\s*"), new RegExp("\\s*" + h(e[1]))]
    }

    function S(r, u) {
        function y() {
            if (m && !g) {
                while (d.length) {
                    delete p[d.pop()]
                }
            } else {
                d = []
            }
            m = false;
            g = false
        }
        r = r || "";
        u = u || e.tags;
        if (typeof u === "string") u = u.split(n);
        if (u.length !== 2) throw new Error("Invalid tags: " + u.join(", "));
        var a = E(u);
        var l = new v(r);
        var c = [];
        var p = [];
        var d = [];
        var m = false;
        var g = false;
        var S, x, T, N, C;
        while (!l.eos()) {
            S = l.pos;
            T = l.scanUntil(a[0]);
            if (T) {
                for (var k = 0, L = T.length; k < L; ++k) {
                    N = T.charAt(k);
                    if (f(N)) {
                        d.push(p.length)
                    } else {
                        g = true
                    }
                    p.push(["text", N, S, S + 1]);
                    S += 1;
                    if (N == "\n") y()
                }
            }
            if (!l.scan(a[0])) break;
            m = true;
            x = l.scan(o) || "name";
            l.scan(t);
            if (x === "=") {
                T = l.scanUntil(i);
                l.scan(i);
                l.scanUntil(a[1])
            } else if (x === "{") {
                T = l.scanUntil(new RegExp("\\s*" + h("}" + u[1])));
                l.scan(s);
                l.scanUntil(a[1]);
                x = "&"
            } else {
                T = l.scanUntil(a[1])
            }
            if (!l.scan(a[1])) throw new Error("Unclosed tag at " + l.pos);
            C = [x, T, S, l.pos];
            p.push(C);
            if (x === "#" || x === "^") {
                c.push(C)
            } else if (x === "/") {
                if (c.length === 0) throw new Error('Unopened section "' + T + '" at ' + S);
                var A = c.pop();
                if (A[1] !== T) throw new Error('Unclosed section "' + A[1] + '" at ' + S)
            } else if (x === "name" || x === "{" || x === "&") {
                g = true
            } else if (x === "=") {
                u = T.split(n);
                if (u.length !== 2) throw new Error("Invalid tags at " + S + ": " + u.join(", "));
                a = E(u)
            }
        }
        var A = c.pop();
        if (A) throw new Error('Unclosed section "' + A[1] + '" at ' + l.pos);
        p = w(p);
        return b(p)
    }
    var t = /\s*/;
    var n = /\s+/;
    var r = /\S/;
    var i = /\s*=/;
    var s = /\s*\}/;
    var o = /#|\^|\/|>|\{|&|=|!/;
    var u = RegExp.prototype.test;
    var l = Object.prototype.toString;
    var c = Array.isArray || function (e) {
        return l.call(e) === "[object Array]"
    };
    var p = {
        "&": "&",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;"
    };
    v.prototype.eos = function () {
        return this.tail === ""
    };
    v.prototype.scan = function (e) {
        var t = this.tail.match(e);
        if (t && t.index === 0) {
            this.tail = this.tail.substring(t[0].length);
            this.pos += t[0].length;
            return t[0]
        }
        return ""
    };
    v.prototype.scanUntil = function (e) {
        var t, n = this.tail.search(e);
        switch (n) {
            case -1:
                t = this.tail;
                this.pos += this.tail.length;
                this.tail = "";
                break;
            case 0:
                t = "";
                break;
            default:
                t = this.tail.substring(0, n);
                this.tail = this.tail.substring(n);
                this.pos += n
        }
        return t
    };
    m.make = function (e) {
        return e instanceof m ? e : new m(e)
    };
    m.prototype.push = function (e) {
        return new m(e, this)
    };
    m.prototype.lookup = function (e) {
        var t = this._cache[e];
        if (!t) {
            if (e == ".") {
                t = this.view
            } else {
                var n = this;
                while (n) {
                    if (e.indexOf(".") > 0) {
                        t = n.view;
                        var r = e.split("."),
                            i = 0;
                        while (t && i < r.length) {
                            t = t[r[i++]]
                        }
                    } else {
                        t = n.view[e]
                    }
                    if (t != null) break;
                    n = n.parent
                }
            }
            this._cache[e] = t
        }
        if (typeof t === "function") t = t.call(this.view);
        return t
    };
    g.prototype.clearCache = function () {
        this._cache = {};
        this._partialCache = {}
    };
    g.prototype.compile = function (t, n) {
        var r = this._cache[t];
        if (!r) {
            var i = e.parse(t, n);
            r = this._cache[t] = this.compileTokens(i, t)
        }
        return r
    };
    g.prototype.compilePartial = function (e, t, n) {
        var r = this.compile(t, n);
        this._partialCache[e] = r;
        return r
    };
    g.prototype.getPartial = function (e) {
        if (!(e in this._partialCache) && this._loadPartial) {
            this.compilePartial(e, this._loadPartial(e))
        }
        return this._partialCache[e]
    };
    g.prototype.compileTokens = function (e, t) {
        var n = this;
        return function (r, i) {
            if (i) {
                if (typeof i === "function") {
                    n._loadPartial = i
                } else {
                    for (var s in i) {
                        n.compilePartial(s, i[s])
                    }
                }
            }
            return y(e, n, m.make(r), t)
        }
    };
    g.prototype.render = function (e, t, n) {
        return this.compile(e)(t, n)
    };
    e.name = "mustache.js";
    e.version = "0.7.2";
    e.tags = ["{{", "}}"];
    e.Scanner = v;
    e.Context = m;
    e.Writer = g;
    e.parse = S;
    e.escape = d;
    var x = new g;
    e.clearCache = function () {
        return x.clearCache()
    };
    e.compile = function (e, t) {
        return x.compile(e, t)
    };
    e.compilePartial = function (e, t, n) {
        return x.compilePartial(e, t, n)
    };
    e.compileTokens = function (e, t) {
        return x.compileTokens(e, t)
    };
    e.render = function (e, t, n) {
        return x.render(e, t, n)
    };
    e.to_html = function (t, n, r, i) {
        var s = e.render(t, n, r);
        if (typeof i === "function") {
            i(s)
        } else {
            return s
        }
    }
});
(function (e, t) {
    "use strict";

    function s(t) {
        t = e.extend({}, r, t || {});
        if (n === null) {
            n = e("body")
        }
        var i = e(this);
        for (var s = 0, u = i.length; s < u; s++) {
            o(i.eq(s), t)
        }
        return i
    }

    function o(n, r) {
        if (!n.hasClass("scroller")) {
            r = e.extend({}, r, n.data("scroller-options"));
            var s = "";
            s += '<div class="scroller-bar">';
            s += '<div class="scroller-track">';
            s += '<div class="scroller-handle">';
            s += "</div></div></div>";
            r.paddingRight = parseInt(n.css("padding-right"), 10);
            r.paddingBottom = parseInt(n.css("padding-bottom"), 10);
            n.addClass(r.customClass + " scroller").wrapInner('<div class="scroller-content" />').prepend(s);
            if (r.horizontal) {
                n.addClass("scroller-horizontal")
            }
            var o = e.extend({
                $scroller: n,
                $content: n.find(".scroller-content"),
                $bar: n.find(".scroller-bar"),
                $track: n.find(".scroller-track"),
                $handle: n.find(".scroller-handle")
            }, r);
            o.trackMargin = parseInt(o.trackMargin, 10);
            o.$content.on("scroll.scroller", o, u);
            o.$scroller.on("touchstart.scroller mousedown.scroller", ".scroller-track", o, a).on("touchstart.scroller mousedown.scroller", ".scroller-handle", o, f).data("scroller", o);
            i.reset.apply(n);
            e(t).one("load", function () {
                i.reset.apply(n)
            })
        }
    }

    function u(e) {
        e.preventDefault();
        e.stopPropagation();
        var t = e.data;
        if (t.horizontal) {
            var n = t.$content.scrollLeft();
            if (n < 0) {
                n = 0
            }
            var r = n / t.scrollRatio;
            if (r > t.handleBounds.right) {
                r = t.handleBounds.right
            }
            t.$handle.css({
                left: r
            })
        } else {
            var i = t.$content.scrollTop();
            if (i < 0) {
                i = 0
            }
            var s = i / t.scrollRatio;
            if (s > t.handleBounds.bottom) {
                s = t.handleBounds.bottom
            }
            t.$handle.css({
                top: s
            })
        }
    }

    function a(e) {
        e.preventDefault();
        e.stopPropagation();
        var t = e.data,
            r = e.originalEvent,
            i = t.$track.offset(),
            s = typeof r.targetTouches !== "undefined" ? r.targetTouches[0] : null;
        var o = s ? s.pageX : e.clientX,
            u = s ? s.pageY : e.clientY;
        if (t.horizontal) {
            t.mouseStart = o;
            t.handleLeft = o - i.left - t.handleWidth / 2;
            p.apply(t.$scroller, [t, t.handleLeft])
        } else {
            t.mouseStart = u;
            t.handleTop = u - i.top - t.handleHeight / 2;
            p.apply(t.$scroller, [t, t.handleTop])
        }
        t.$content.off(".scroller");
        n.on("touchmove.scroller mousemove.scroller", t, l).on("touchend.scroller mouseup.scroller", t, c)
    }

    function f(e) {
        e.preventDefault();
        e.stopPropagation();
        var t = e.data,
            r = e.originalEvent,
            i = typeof r.targetTouches !== "undefined" ? r.targetTouches[0] : null;
        var s = i ? i.pageX : e.clientX,
            o = i ? i.pageY : e.clientY;
        if (t.horizontal) {
            t.mouseStart = s;
            t.handleLeft = parseInt(t.$handle.css("left"), 10)
        } else {
            t.mouseStart = o;
            t.handleTop = parseInt(t.$handle.css("top"), 10)
        }
        t.$content.off(".scroller");
        n.on("touchmove.scroller mousemove.scroller", t, l).on("touchend.scroller mouseup.scroller", t, c)
    }

    function l(e) {
        e.preventDefault();
        e.stopPropagation();
        var t = e.data,
            n = e.originalEvent,
            r = 0,
            i = 0,
            s = typeof n.targetTouches !== "undefined" ? n.targetTouches[0] : null;
        var o = s ? s.pageX : e.clientX,
            u = s ? s.pageY : e.clientY;
        if (t.horizontal) {
            i = t.mouseStart - o;
            r = t.handleLeft - i
        } else {
            i = t.mouseStart - u;
            r = t.handleTop - i
        }
        p.apply(t.$scroller, [t, r])
    }

    function c(e) {
        e.preventDefault();
        e.stopPropagation();
        var t = e.data;
        t.$content.on("scroll.scroller", t, u);
        n.off(".scroller")
    }

    function h(e) {
        e.preventDefault();
        e.stopPropagation();
        var t = e.data;
        t.$content.on("scroll.scroller", t, u);
        n.off(".scroller")
    }

    function p(e, t) {
        if (e.horizontal) {
            if (t < e.handleBounds.left) {
                t = e.handleBounds.left
            }
            if (t > e.handleBounds.right) {
                t = e.handleBounds.right
            }
            var n = Math.round(t * e.scrollRatio);
            e.$handle.css({
                left: t
            });
            e.$content.scrollLeft(n)
        } else {
            if (t < e.handleBounds.top) {
                t = e.handleBounds.top
            }
            if (t > e.handleBounds.bottom) {
                t = e.handleBounds.bottom
            }
            var r = Math.round(t * e.scrollRatio);
            e.$handle.css({
                top: t
            });
            e.$content.scrollTop(r)
        }
    }
    var n = null;
    var r = {
        customClass: "",
        duration: 0,
        handleSize: 0,
        horizontal: false,
        trackMargin: 0
    };
    var i = {
        defaults: function (t) {
            r = e.extend(r, t || {});
            return e(this)
        },
        destroy: function () {
            return e(this).each(function (t, n) {
                var r = e(n).data("scroller");
                if (r) {
                    r.$scroller.removeClass(r.customClass).removeClass("scroller").removeClass("scroller-active");
                    r.$bar.remove();
                    r.$content.contents().unwrap();
                    r.$content.off(".scroller");
                    r.$scroller.off(".scroller").removeData("scroller")
                }
            })
        },
        scroll: function (t, n) {
            return e(this).each(function (i) {
                var s = e(this).data("scroller"),
                    o = n || r.duration;
                if (typeof t !== "number") {
                    var u = e(t);
                    if (u.length > 0) {
                        var a = u.position();
                        if (s.horizontal) {
                            t = a.left + s.$content.scrollLeft()
                        } else {
                            t = a.top + s.$content.scrollTop()
                        }
                    } else {
                        t = s.$content.scrollTop()
                    }
                }
                if (s.horizontal) {
                    s.$content.stop().animate({
                        scrollLeft: t
                    }, o)
                } else {
                    s.$content.stop().animate({
                        scrollTop: t
                    }, o)
                }
            })
        },
        reset: function () {
            return e(this).each(function (t) {
                var n = e(this).data("scroller");
                if (n) {
                    n.$scroller.addClass("scroller-setup");
                    if (n.horizontal) {
                        n.barHeight = n.$content[0].offsetHeight - n.$content[0].clientHeight;
                        n.frameWidth = n.$content.outerWidth();
                        n.trackWidth = n.frameWidth - n.trackMargin * 2;
                        n.scrollWidth = n.$content[0].scrollWidth;
                        n.ratio = n.trackWidth / n.scrollWidth;
                        n.trackRatio = n.trackWidth / n.scrollWidth;
                        n.handleWidth = n.handleSize > 0 ? n.handleSize : n.trackWidth * n.trackRatio;
                        n.scrollRatio = (n.scrollWidth - n.frameWidth) / (n.trackWidth - n.handleWidth);
                        n.handleBounds = {
                            left: 0,
                            right: n.trackWidth - n.handleWidth
                        };
                        n.$content.css({
                            paddingBottom: n.barHeight + n.paddingBottom
                        });
                        var r = n.$content.scrollLeft(),
                            i = r * n.ratio;
                        if (n.scrollWidth <= n.frameWidth) {
                            n.$scroller.removeClass("scroller-active")
                        } else {
                            n.$scroller.addClass("scroller-active")
                        }
                        n.$bar.css({
                            width: n.frameWidth
                        });
                        n.$track.css({
                            width: n.trackWidth,
                            marginLeft: n.trackMargin,
                            marginRight: n.trackMargin
                        });
                        n.$handle.css({
                            width: n.handleWidth
                        });
                        p.apply(n.$scroller, [n, i])
                    } else {
                        n.barWidth = n.$content[0].offsetWidth - n.$content[0].clientWidth;
                        n.frameHeight = n.$content.outerHeight();
                        n.trackHeight = n.frameHeight - n.trackMargin * 2;
                        n.scrollHeight = n.$content[0].scrollHeight;
                        n.ratio = n.trackHeight / n.scrollHeight;
                        n.trackRatio = n.trackHeight / n.scrollHeight;
                        n.handleHeight = n.handleSize > 0 ? n.handleSize : n.trackHeight * n.trackRatio;
                        n.scrollRatio = (n.scrollHeight - n.frameHeight) / (n.trackHeight - n.handleHeight);
                        n.handleBounds = {
                            top: 0,
                            bottom: n.trackHeight - n.handleHeight
                        };
                        var s = n.$content.scrollTop(),
                            o = s * n.ratio;
                        if (n.scrollHeight <= n.frameHeight) {
                            n.$scroller.removeClass("scroller-active")
                        } else {
                            n.$scroller.addClass("scroller-active")
                        }
                        n.$bar.css({
                            height: n.frameHeight
                        });
                        n.$track.css({
                            height: n.trackHeight,
                            marginBottom: n.trackMargin,
                            marginTop: n.trackMargin
                        });
                        n.$handle.css({
                            height: n.handleHeight
                        });
                        p.apply(n.$scroller, [n, o])
                    }
                    n.$scroller.removeClass("scroller-setup")
                }
            })
        }
    };
    e.fn.scroller = function (e) {
        if (i[e]) {
            return i[e].apply(this, Array.prototype.slice.call(arguments, 1))
        } else if (typeof e === "object" || !e) {
            return s.apply(this, arguments)
        }
        return this
    };
    e.scroller = function (e) {
        if (e === "defaults") {
            i.defaults.apply(this, Array.prototype.slice.call(arguments, 1))
        }
    }
})(jQuery);
(function (e, t, n, r) {
    function u(t, n) {
        this.settings = null;
        this.options = e.extend({}, u.Defaults, n);
        this.$element = e(t);
        this.drag = e.extend({}, i);
        this.state = e.extend({}, s);
        this.e = e.extend({}, o);
        this._plugins = {};
        this._supress = {};
        this._current = null;
        this._speed = null;
        this._coordinates = [];
        this._breakpoint = null;
        this._width = null;
        this._items = [];
        this._clones = [];
        this._mergers = [];
        this._invalidated = {};
        this._pipe = [];
        e.each(u.Plugins, e.proxy(function (e, t) {
            this._plugins[e[0].toLowerCase() + e.slice(1)] = new t(this)
        }, this));
        e.each(u.Pipe, e.proxy(function (t, n) {
            this._pipe.push({
                filter: n.filter,
                run: e.proxy(n.run, this)
            })
        }, this));
        this.setup();
        this.initialize()
    }

    function a(e) {
        if (e.touches !== r) {
            return {
                x: e.touches[0].pageX,
                y: e.touches[0].pageY
            }
        }
        if (e.touches === r) {
            if (e.pageX !== r) {
                return {
                    x: e.pageX,
                    y: e.pageY
                }
            }
            if (e.pageX === r) {
                return {
                    x: e.clientX,
                    y: e.clientY
                }
            }
        }
    }

    function f(e) {
        var t, r, i = n.createElement("div"),
            s = e;
        for (t in s) {
            r = s[t];
            if (typeof i.style[r] !== "undefined") {
                i = null;
                return [r, t]
            }
        }
        return [false]
    }

    function l() {
        return f(["transition", "WebkitTransition", "MozTransition", "OTransition"])[1]
    }

    function c() {
        return f(["transform", "WebkitTransform", "MozTransform", "OTransform", "msTransform"])[0]
    }

    function h() {
        return f(["perspective", "webkitPerspective", "MozPerspective", "OPerspective", "MsPerspective"])[0]
    }

    function p() {
        return "ontouchstart" in t || !!navigator.msMaxTouchPoints
    }

    function d() {
        return t.navigator.msPointerEnabled
    }
    var i, s, o;
    i = {
        start: 0,
        startX: 0,
        startY: 0,
        current: 0,
        currentX: 0,
        currentY: 0,
        offsetX: 0,
        offsetY: 0,
        distance: null,
        startTime: 0,
        endTime: 0,
        updatedX: 0,
        targetEl: null
    };
    s = {
        isTouch: false,
        isScrolling: false,
        isSwiping: false,
        direction: false,
        inMotion: false
    };
    o = {
        _onDragStart: null,
        _onDragMove: null,
        _onDragEnd: null,
        _transitionEnd: null,
        _resizer: null,
        _responsiveCall: null,
        _goToLoop: null,
        _checkVisibile: null
    };
    u.Defaults = {
        items: 3,
        loop: false,
        center: false,
        mouseDrag: true,
        touchDrag: true,
        pullDrag: true,
        freeDrag: false,
        margin: 0,
        stagePadding: 0,
        merge: false,
        mergeFit: true,
        autoWidth: false,
        startPosition: 0,
        rtl: false,
        smartSpeed: 250,
        fluidSpeed: false,
        dragEndSpeed: false,
        responsive: {},
        responsiveRefreshRate: 200,
        responsiveBaseElement: t,
        responsiveClass: false,
        fallbackEasing: "swing",
        info: false,
        nestedItemSelector: false,
        itemElement: "div",
        stageElement: "div",
        themeClass: "owl-theme",
        baseClass: "owl-carousel",
        itemClass: "owl-item",
        centerClass: "center",
        activeClass: "active"
    };
    u.Width = {
        Default: "default",
        Inner: "inner",
        Outer: "outer"
    };
    u.Plugins = {};
    u.Pipe = [{
        filter: ["width", "items", "settings"],
        run: function (e) {
            e.current = this._items && this._items[this.relative(this._current)]
        }
    }, {
        filter: ["items", "settings"],
        run: function () {
            var e = this._clones,
                t = this.$stage.children(".cloned");
            if (t.length !== e.length || !this.settings.loop && e.length > 0) {
                this.$stage.children(".cloned").remove();
                this._clones = []
            }
        }
    }, {
        filter: ["items", "settings"],
        run: function () {
            var e, t, n = this._clones,
                r = this._items,
                i = this.settings.loop ? n.length - Math.max(this.settings.items * 2, 4) : 0;
            for (e = 0, t = Math.abs(i / 2) ; e < t; e++) {
                if (i > 0) {
                    this.$stage.children().eq(r.length + n.length - 1).remove();
                    n.pop();
                    this.$stage.children().eq(0).remove();
                    n.pop()
                } else {
                    n.push(n.length / 2);
                    this.$stage.append(r[n[n.length - 1]].clone().addClass("cloned"));
                    n.push(r.length - 1 - (n.length - 1) / 2);
                    this.$stage.prepend(r[n[n.length - 1]].clone().addClass("cloned"))
                }
            }
        }
    }, {
        filter: ["width", "items", "settings"],
        run: function () {
            var e = this.settings.rtl ? 1 : -1,
                t = (this.width() / this.settings.items).toFixed(3),
                n = 0,
                r, i, s;
            this._coordinates = [];
            for (i = 0, s = this._clones.length + this._items.length; i < s; i++) {
                r = this._mergers[this.relative(i)];
                r = this.settings.mergeFit && Math.min(r, this.settings.items) || r;
                n += (this.settings.autoWidth ? this._items[this.relative(i)].width() + this.settings.margin : t * r) * e;
                this._coordinates.push(n)
            }
        }
    }, {
        filter: ["width", "items", "settings"],
        run: function () {
            var t, n, r = (this.width() / this.settings.items).toFixed(3),
                i = {
                    width: Math.abs(this._coordinates[this._coordinates.length - 1]) + this.settings.stagePadding * 2,
                    "padding-left": this.settings.stagePadding || "",
                    "padding-right": this.settings.stagePadding || ""
                };
            this.$stage.css(i);
            i = {
                width: this.settings.autoWidth ? "auto" : r - this.settings.margin
            };
            i[this.settings.rtl ? "margin-left" : "margin-right"] = this.settings.margin;
            if (!this.settings.autoWidth && e.grep(this._mergers, function (e) {
                    return e > 1
            }).length > 0) {
                for (t = 0, n = this._coordinates.length; t < n; t++) {
                    i.width = Math.abs(this._coordinates[t]) - Math.abs(this._coordinates[t - 1] || 0) - this.settings.margin;
                    this.$stage.children().eq(t).css(i)
                }
            } else {
                this.$stage.children().css(i)
            }
        }
    }, {
        filter: ["width", "items", "settings"],
        run: function (e) {
            e.current && this.reset(this.$stage.children().index(e.current))
        }
    }, {
        filter: ["position"],
        run: function () {
            this.animate(this.coordinates(this._current))
        }
    }, {
        filter: ["width", "position", "items", "settings"],
        run: function () {
            var e = this.settings.rtl ? 1 : -1,
                t = this.settings.stagePadding * 2,
                n = this.coordinates(this.current()) + t,
                r = n + this.width() * e,
                i, s, o = [],
                u, a;
            for (u = 0, a = this._coordinates.length; u < a; u++) {
                i = this._coordinates[u - 1] || 0;
                s = Math.abs(this._coordinates[u]) + t * e;
                if (this.op(i, "<=", n) && this.op(i, ">", r) || this.op(s, "<", n) && this.op(s, ">", r)) {
                    o.push(u)
                }
            }
            this.$stage.children("." + this.settings.activeClass).removeClass(this.settings.activeClass);
            this.$stage.children(":eq(" + o.join("), :eq(") + ")").addClass(this.settings.activeClass);
            if (this.settings.center) {
                this.$stage.children("." + this.settings.centerClass).removeClass(this.settings.centerClass);
                this.$stage.children().eq(this.current()).addClass(this.settings.centerClass)
            }
        }
    }];
    u.prototype.initialize = function () {
        this.trigger("initialize");
        this.$element.addClass(this.settings.baseClass).addClass(this.settings.themeClass).toggleClass("owl-rtl", this.settings.rtl);
        this.browserSupport();
        if (this.settings.autoWidth && this.state.imagesLoaded !== true) {
            var t, n, i;
            t = this.$element.find("img");
            n = this.settings.nestedItemSelector ? "." + this.settings.nestedItemSelector : r;
            i = this.$element.children(n).width();
            if (t.length && i <= 0) {
                this.preloadAutoWidthImages(t);
                return false
            }
        }
        this.$element.addClass("owl-loading");
        this.$stage = e("<" + this.settings.stageElement + ' class="owl-stage"/>').wrap('<div class="owl-stage-outer">');
        this.$element.append(this.$stage.parent());
        this.replace(this.$element.children().not(this.$stage.parent()));
        this._width = this.$element.width();
        this.refresh();
        this.$element.removeClass("owl-loading").addClass("owl-loaded");
        this.eventsCall();
        this.internalEvents();
        this.addTriggerableEvents();
        this.trigger("initialized")
    };
    u.prototype.setup = function () {
        var t = this.viewport(),
            n = this.options.responsive,
            r = -1,
            i = null;
        if (!n) {
            i = e.extend({}, this.options)
        } else {
            e.each(n, function (e) {
                if (e <= t && e > r) {
                    r = Number(e)
                }
            });
            i = e.extend({}, this.options, n[r]);
            delete i.responsive;
            if (i.responsiveClass) {
                this.$element.attr("class", function (e, t) {
                    return t.replace(/\b owl-responsive-\S+/g, "")
                }).addClass("owl-responsive-" + r)
            }
        }
        if (this.settings === null || this._breakpoint !== r) {
            this.trigger("change", {
                property: {
                    name: "settings",
                    value: i
                }
            });
            this._breakpoint = r;
            this.settings = i;
            this.invalidate("settings");
            this.trigger("changed", {
                property: {
                    name: "settings",
                    value: this.settings
                }
            })
        }
    };
    u.prototype.optionsLogic = function () {
        this.$element.toggleClass("owl-center", this.settings.center);
        if (this.settings.loop && this._items.length < this.settings.items) {
            this.settings.loop = false
        }
        if (this.settings.autoWidth) {
            this.settings.stagePadding = false;
            this.settings.merge = false
        }
    };
    u.prototype.prepare = function (t) {
        var n = this.trigger("prepare", {
            content: t
        });
        if (!n.data) {
            n.data = e("<" + this.settings.itemElement + "/>").addClass(this.settings.itemClass).append(t)
        }
        this.trigger("prepared", {
            content: n.data
        });
        return n.data
    };
    u.prototype.update = function () {
        var t = 0,
            n = this._pipe.length,
            r = e.proxy(function (e) {
                return this[e]
            }, this._invalidated),
            i = {};
        while (t < n) {
            if (this._invalidated.all || e.grep(this._pipe[t].filter, r).length > 0) {
                this._pipe[t].run(i)
            }
            t++
        }
        this._invalidated = {}
    };
    u.prototype.width = function (e) {
        e = e || u.Width.Default;
        switch (e) {
            case u.Width.Inner:
            case u.Width.Outer:
                return this._width;
            default:
                return this._width - this.settings.stagePadding * 2 + this.settings.margin
        }
    };
    u.prototype.refresh = function () {
        if (this._items.length === 0) {
            return false
        }
        var e = (new Date).getTime();
        this.trigger("refresh");
        this.setup();
        this.optionsLogic();
        this.$stage.addClass("owl-refresh");
        this.update();
        this.$stage.removeClass("owl-refresh");
        this.state.orientation = t.orientation;
        this.watchVisibility();
        this.trigger("refreshed")
    };
    u.prototype.eventsCall = function () {
        this.e._onDragStart = e.proxy(function (e) {
            this.onDragStart(e)
        }, this);
        this.e._onDragMove = e.proxy(function (e) {
            this.onDragMove(e)
        }, this);
        this.e._onDragEnd = e.proxy(function (e) {
            this.onDragEnd(e)
        }, this);
        this.e._onResize = e.proxy(function (e) {
            this.onResize(e)
        }, this);
        this.e._transitionEnd = e.proxy(function (e) {
            this.transitionEnd(e)
        }, this);
        this.e._preventClick = e.proxy(function (e) {
            this.preventClick(e)
        }, this)
    };
    u.prototype.onThrottledResize = function () {
        t.clearTimeout(this.resizeTimer);
        this.resizeTimer = t.setTimeout(this.e._onResize, this.settings.responsiveRefreshRate)
    };
    u.prototype.onResize = function () {
        if (!this._items.length) {
            return false
        }
        if (this._width === this.$element.width()) {
            return false
        }
        if (this.trigger("resize").isDefaultPrevented()) {
            return false
        }
        this._width = this.$element.width();
        this.invalidate("width");
        this.refresh();
        this.trigger("resized")
    };
    u.prototype.eventsRouter = function (e) {
        var t = e.type;
        if (t === "mousedown" || t === "touchstart") {
            this.onDragStart(e)
        } else if (t === "mousemove" || t === "touchmove") {
            this.onDragMove(e)
        } else if (t === "mouseup" || t === "touchend") {
            this.onDragEnd(e)
        } else if (t === "touchcancel") {
            this.onDragEnd(e)
        }
    };
    u.prototype.internalEvents = function () {
        var n = p(),
            r = d();
        if (this.settings.mouseDrag) {
            this.$stage.on("mousedown", e.proxy(function (e) {
                this.eventsRouter(e)
            }, this));
            this.$stage.on("dragstart", function () {
                return false
            });
            this.$stage.get(0).onselectstart = function () {
                return false
            }
        } else {
            this.$element.addClass("owl-text-select-on")
        }
        if (this.settings.touchDrag && !r) {
            this.$stage.on("touchstart touchcancel", e.proxy(function (e) {
                this.eventsRouter(e)
            }, this))
        }
        if (this.transitionEndVendor) {
            this.on(this.$stage.get(0), this.transitionEndVendor, this.e._transitionEnd, false)
        }
        if (this.settings.responsive !== false) {
            this.on(t, "resize", e.proxy(this.onThrottledResize, this))
        }
    };
    u.prototype.onDragStart = function (r) {
        var i, s, o, u, f;
        i = r.originalEvent || r || t.event;
        if (i.which === 3 || this.state.isTouch) {
            return false
        }
        if (i.type === "mousedown") {
            this.$stage.addClass("owl-grab")
        }
        this.trigger("drag");
        this.drag.startTime = (new Date).getTime();
        this.speed(0);
        this.state.isTouch = true;
        this.state.isScrolling = false;
        this.state.isSwiping = false;
        this.drag.distance = 0;
        o = a(i).x;
        u = a(i).y;
        this.drag.offsetX = this.$stage.position().left;
        this.drag.offsetY = this.$stage.position().top;
        if (this.settings.rtl) {
            this.drag.offsetX = this.$stage.position().left + this.$stage.width() - this.width() + this.settings.margin
        }
        if (this.state.inMotion && this.support3d) {
            f = this.getTransformProperty();
            this.drag.offsetX = f;
            this.animate(f);
            this.state.inMotion = true
        } else if (this.state.inMotion && !this.support3d) {
            this.state.inMotion = false;
            return false
        }
        this.drag.startX = o - this.drag.offsetX;
        this.drag.startY = u - this.drag.offsetY;
        this.drag.start = o - this.drag.startX;
        this.drag.targetEl = i.target || i.srcElement;
        this.drag.updatedX = this.drag.start;
        if (this.drag.targetEl.tagName === "IMG" || this.drag.targetEl.tagName === "A") {
            this.drag.targetEl.draggable = false
        }
        e(n).on("mousemove.owl.dragEvents mouseup.owl.dragEvents touchmove.owl.dragEvents touchend.owl.dragEvents", e.proxy(function (e) {
            this.eventsRouter(e)
        }, this))
    };
    u.prototype.onDragMove = function (e) {
        var n, i, s, o, u, f, l;
        if (!this.state.isTouch) {
            return
        }
        if (this.state.isScrolling) {
            return
        }
        n = e.originalEvent || e || t.event;
        s = a(n).x;
        o = a(n).y;
        this.drag.currentX = s - this.drag.startX;
        this.drag.currentY = o - this.drag.startY;
        this.drag.distance = this.drag.currentX - this.drag.offsetX;
        if (this.drag.distance < 0) {
            this.state.direction = this.settings.rtl ? "right" : "left"
        } else if (this.drag.distance > 0) {
            this.state.direction = this.settings.rtl ? "left" : "right"
        }
        if (this.settings.loop) {
            if (this.op(this.drag.currentX, ">", this.coordinates(this.minimum())) && this.state.direction === "right") {
                this.drag.currentX -= (this.settings.center && this.coordinates(0)) - this.coordinates(this._items.length)
            } else if (this.op(this.drag.currentX, "<", this.coordinates(this.maximum())) && this.state.direction === "left") {
                this.drag.currentX += (this.settings.center && this.coordinates(0)) - this.coordinates(this._items.length)
            }
        } else {
            u = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());
            f = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());
            l = this.settings.pullDrag ? this.drag.distance / 5 : 0;
            this.drag.currentX = Math.max(Math.min(this.drag.currentX, u + l), f + l)
        }
        if (this.drag.distance > 8 || this.drag.distance < -8) {
            if (n.preventDefault !== r) {
                n.preventDefault()
            } else {
                n.returnValue = false
            }
            this.state.isSwiping = true
        }
        this.drag.updatedX = this.drag.currentX;
        if ((this.drag.currentY > 16 || this.drag.currentY < -16) && this.state.isSwiping === false) {
            this.state.isScrolling = true;
            this.drag.updatedX = this.drag.start
        }
        this.animate(this.drag.updatedX)
    };
    u.prototype.onDragEnd = function (t) {
        var r, i, s;
        if (!this.state.isTouch) {
            return
        }
        if (t.type === "mouseup") {
            this.$stage.removeClass("owl-grab")
        }
        this.trigger("dragged");
        this.drag.targetEl.removeAttribute("draggable");
        this.state.isTouch = false;
        this.state.isScrolling = false;
        this.state.isSwiping = false;
        if (this.drag.distance === 0 && this.state.inMotion !== true) {
            this.state.inMotion = false;
            return false
        }
        this.drag.endTime = (new Date).getTime();
        r = this.drag.endTime - this.drag.startTime;
        i = Math.abs(this.drag.distance);
        if (i > 3 || r > 300) {
            this.removeClick(this.drag.targetEl)
        }
        s = this.closest(this.drag.updatedX);
        this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed);
        this.current(s);
        this.invalidate("position");
        this.update();
        if (!this.settings.pullDrag && this.drag.updatedX === this.coordinates(s)) {
            this.transitionEnd()
        }
        this.drag.distance = 0;
        e(n).off(".owl.dragEvents")
    };
    u.prototype.removeClick = function (n) {
        this.drag.targetEl = n;
        e(n).on("click.preventClick", this.e._preventClick);
        t.setTimeout(function () {
            e(n).off("click.preventClick")
        }, 300)
    };
    u.prototype.preventClick = function (t) {
        if (t.preventDefault) {
            t.preventDefault()
        } else {
            t.returnValue = false
        }
        if (t.stopPropagation) {
            t.stopPropagation()
        }
        e(t.target).off("click.preventClick")
    };
    u.prototype.getTransformProperty = function () {
        var e, n;
        e = t.getComputedStyle(this.$stage.get(0), null).getPropertyValue(this.vendorName + "transform");
        e = e.replace(/matrix(3d)?\(|\)/g, "").split(",");
        n = e.length === 16;
        return n !== true ? e[4] : e[12]
    };
    u.prototype.closest = function (t) {
        var n = -1,
            r = 30,
            i = this.width(),
            s = this.coordinates();
        if (!this.settings.freeDrag) {
            e.each(s, e.proxy(function (e, o) {
                if (t > o - r && t < o + r) {
                    n = e
                } else if (this.op(t, "<", o) && this.op(t, ">", s[e + 1] || o - i)) {
                    n = this.state.direction === "left" ? e + 1 : e
                }
                return n === -1
            }, this))
        }
        if (!this.settings.loop) {
            if (this.op(t, ">", s[this.minimum()])) {
                n = t = this.minimum()
            } else if (this.op(t, "<", s[this.maximum()])) {
                n = t = this.maximum()
            }
        }
        return n
    };
    u.prototype.animate = function (t) {
        this.trigger("translate");
        this.state.inMotion = this.speed() > 0;
        if (this.support3d) {
            this.$stage.css({
                transform: "translate3d(" + t + "px" + ",0px, 0px)",
                transition: this.speed() / 1e3 + "s"
            })
        } else if (this.state.isTouch) {
            this.$stage.css({
                left: t + "px"
            })
        } else {
            this.$stage.animate({
                left: t
            }, this.speed() / 1e3, this.settings.fallbackEasing, e.proxy(function () {
                if (this.state.inMotion) {
                    this.transitionEnd()
                }
            }, this))
        }
    };
    u.prototype.current = function (e) {
        if (e === r) {
            return this._current
        }
        if (this._items.length === 0) {
            return r
        }
        e = this.normalize(e);
        if (this._current !== e) {
            var t = this.trigger("change", {
                property: {
                    name: "position",
                    value: e
                }
            });
            if (t.data !== r) {
                e = this.normalize(t.data)
            }
            this._current = e;
            this.invalidate("position");
            this.trigger("changed", {
                property: {
                    name: "position",
                    value: this._current
                }
            })
        }
        return this._current
    };
    u.prototype.invalidate = function (e) {
        this._invalidated[e] = true
    };
    u.prototype.reset = function (e) {
        e = this.normalize(e);
        if (e === r) {
            return
        }
        this._speed = 0;
        this._current = e;
        this.suppress(["translate", "translated"]);
        this.animate(this.coordinates(e));
        this.release(["translate", "translated"])
    };
    u.prototype.normalize = function (t, n) {
        var i = n ? this._items.length : this._items.length + this._clones.length;
        if (!e.isNumeric(t) || i < 1) {
            return r
        }
        if (this._clones.length) {
            t = (t % i + i) % i
        } else {
            t = Math.max(this.minimum(n), Math.min(this.maximum(n), t))
        }
        return t
    };
    u.prototype.relative = function (e) {
        e = this.normalize(e);
        e = e - this._clones.length / 2;
        return this.normalize(e, true)
    };
    u.prototype.maximum = function (e) {
        var t, n, r = 0,
            i, s = this.settings;
        if (e) {
            return this._items.length - 1
        }
        if (!s.loop && s.center) {
            t = this._items.length - 1
        } else if (!s.loop && !s.center) {
            t = this._items.length - s.items
        } else if (s.loop || s.center) {
            t = this._items.length + s.items
        } else if (s.autoWidth || s.merge) {
            revert = s.rtl ? 1 : -1;
            n = this.$stage.width() - this.$element.width();
            while (i = this.coordinates(r)) {
                if (i * revert >= n) {
                    break
                }
                t = ++r
            }
        } else {
            throw "Can not detect maximum absolute position."
        }
        return t
    };
    u.prototype.minimum = function (e) {
        if (e) {
            return 0
        }
        return this._clones.length / 2
    };
    u.prototype.items = function (e) {
        if (e === r) {
            return this._items.slice()
        }
        e = this.normalize(e, true);
        return this._items[e]
    };
    u.prototype.mergers = function (e) {
        if (e === r) {
            return this._mergers.slice()
        }
        e = this.normalize(e, true);
        return this._mergers[e]
    };
    u.prototype.clones = function (t) {
        var n = this._clones.length / 2,
            i = n + this._items.length,
            s = function (e) {
                return e % 2 === 0 ? i + e / 2 : n - (e + 1) / 2
            };
        if (t === r) {
            return e.map(this._clones, function (e, t) {
                return s(t)
            })
        }
        return e.map(this._clones, function (e, n) {
            return e === t ? s(n) : null
        })
    };
    u.prototype.speed = function (e) {
        if (e !== r) {
            this._speed = e
        }
        return this._speed
    };
    u.prototype.coordinates = function (t) {
        var n = null;
        if (t === r) {
            return e.map(this._coordinates, e.proxy(function (e, t) {
                return this.coordinates(t)
            }, this))
        }
        if (this.settings.center) {
            n = this._coordinates[t];
            n += (this.width() - n + (this._coordinates[t - 1] || 0)) / 2 * (this.settings.rtl ? -1 : 1)
        } else {
            n = this._coordinates[t - 1] || 0
        }
        return n
    };
    u.prototype.duration = function (e, t, n) {
        return Math.min(Math.max(Math.abs(t - e), 1), 6) * Math.abs(n || this.settings.smartSpeed)
    };
    u.prototype.to = function (n, r) {
        if (this.settings.loop) {
            var i = n - this.relative(this.current()),
                s = this.current(),
                o = this.current(),
                u = this.current() + i,
                a = o - u < 0 ? true : false,
                f = this._clones.length + this._items.length;
            if (u < this.settings.items && a === false) {
                s = o + this._items.length;
                this.reset(s)
            } else if (u >= f - this.settings.items && a === true) {
                s = o - this._items.length;
                this.reset(s)
            }
            t.clearTimeout(this.e._goToLoop);
            this.e._goToLoop = t.setTimeout(e.proxy(function () {
                this.speed(this.duration(this.current(), s + i, r));
                this.current(s + i);
                this.update()
            }, this), 30)
        } else {
            this.speed(this.duration(this.current(), n, r));
            this.current(n);
            this.update()
        }
    };
    u.prototype.next = function (e) {
        e = e || false;
        this.to(this.relative(this.current()) + 1, e)
    };
    u.prototype.prev = function (e) {
        e = e || false;
        this.to(this.relative(this.current()) - 1, e)
    };
    u.prototype.transitionEnd = function (e) {
        if (e !== r) {
            e.stopPropagation();
            if ((e.target || e.srcElement || e.originalTarget) !== this.$stage.get(0)) {
                return false
            }
        }
        this.state.inMotion = false;
        this.trigger("translated")
    };
    u.prototype.viewport = function () {
        var r;
        if (this.options.responsiveBaseElement !== t) {
            r = e(this.options.responsiveBaseElement).width()
        } else if (t.innerWidth) {
            r = t.innerWidth
        } else if (n.documentElement && n.documentElement.clientWidth) {
            r = n.documentElement.clientWidth
        } else {
            throw "Can not detect viewport width."
        }
        return r
    };
    u.prototype.replace = function (t) {
        this.$stage.empty();
        this._items = [];
        if (t) {
            t = t instanceof jQuery ? t : e(t)
        }
        if (this.settings.nestedItemSelector) {
            t = t.find("." + this.settings.nestedItemSelector)
        }
        t.filter(function () {
            return this.nodeType === 1
        }).each(e.proxy(function (e, t) {
            t = this.prepare(t);
            this.$stage.append(t);
            this._items.push(t);
            this._mergers.push(t.find("[data-merge]").andSelf("[data-merge]").attr("data-merge") * 1 || 1)
        }, this));
        this.reset(e.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0);
        this.invalidate("items")
    };
    u.prototype.add = function (e, t) {
        t = t === r ? this._items.length : this.normalize(t, true);
        this.trigger("add", {
            content: e,
            position: t
        });
        if (this._items.length === 0 || t === this._items.length) {
            this.$stage.append(e);
            this._items.push(e);
            this._mergers.push(e.find("[data-merge]").andSelf("[data-merge]").attr("data-merge") * 1 || 1)
        } else {
            this._items[t].before(e);
            this._items.splice(t, 0, e);
            this._mergers.splice(t, 0, e.find("[data-merge]").andSelf("[data-merge]").attr("data-merge") * 1 || 1)
        }
        this.invalidate("items");
        this.trigger("added", {
            content: e,
            position: t
        })
    };
    u.prototype.remove = function (e) {
        e = this.normalize(e, true);
        if (e === r) {
            return
        }
        this.trigger("remove", {
            content: this._items[e],
            position: e
        });
        this._items[e].remove();
        this._items.splice(e, 1);
        this._mergers.splice(e, 1);
        this.invalidate("items");
        this.trigger("removed", {
            content: null,
            position: e
        })
    };
    u.prototype.addTriggerableEvents = function () {
        var t = e.proxy(function (t, n) {
            return e.proxy(function (e) {
                if (e.relatedTarget !== this) {
                    this.suppress([n]);
                    t.apply(this, [].slice.call(arguments, 1));
                    this.release([n])
                }
            }, this)
        }, this);
        e.each({
            next: this.next,
            prev: this.prev,
            to: this.to,
            destroy: this.destroy,
            refresh: this.refresh,
            replace: this.replace,
            add: this.add,
            remove: this.remove
        }, e.proxy(function (e, n) {
            this.$element.on(e + ".owl.carousel", t(n, e + ".owl.carousel"))
        }, this))
    };
    u.prototype.watchVisibility = function () {
        function n(e) {
            return e.offsetWidth > 0 && e.offsetHeight > 0
        }

        function r() {
            if (n(this.$element.get(0))) {
                this.$element.removeClass("owl-hidden");
                this.refresh();
                t.clearInterval(this.e._checkVisibile)
            }
        }
        if (!n(this.$element.get(0))) {
            this.$element.addClass("owl-hidden");
            t.clearInterval(this.e._checkVisibile);
            this.e._checkVisibile = t.setInterval(e.proxy(r, this), 500)
        }
    };
    u.prototype.preloadAutoWidthImages = function (t) {
        var n, r, i, s;
        n = 0;
        r = this;
        t.each(function (o, u) {
            i = e(u);
            s = new Image;
            s.onload = function () {
                n++;
                i.attr("src", s.src);
                i.css("opacity", 1);
                if (n >= t.length) {
                    r.state.imagesLoaded = true;
                    r.initialize()
                }
            };
            s.src = i.attr("src") || i.attr("data-src") || i.attr("data-src-retina")
        })
    };
    u.prototype.destroy = function () {
        if (this.$element.hasClass(this.settings.themeClass)) {
            this.$element.removeClass(this.settings.themeClass)
        }
        if (this.settings.responsive !== false) {
            e(t).off("resize.owl.carousel")
        }
        if (this.transitionEndVendor) {
            this.off(this.$stage.get(0), this.transitionEndVendor, this.e._transitionEnd)
        }
        for (var r in this._plugins) {
            this._plugins[r].destroy()
        }
        if (this.settings.mouseDrag || this.settings.touchDrag) {
            this.$stage.off("mousedown touchstart touchcancel");
            e(n).off(".owl.dragEvents");
            this.$stage.get(0).onselectstart = function () { };
            this.$stage.off("dragstart", function () {
                return false
            })
        }
        this.$element.off(".owl");
        this.$stage.children(".cloned").remove();
        this.e = null;
        this.$element.removeData("owlCarousel");
        this.$stage.children().contents().unwrap();
        this.$stage.children().unwrap();
        this.$stage.unwrap()
    };
    u.prototype.op = function (e, t, n) {
        var r = this.settings.rtl;
        switch (t) {
            case "<":
                return r ? e > n : e < n;
            case ">":
                return r ? e < n : e > n;
            case ">=":
                return r ? e <= n : e >= n;
            case "<=":
                return r ? e >= n : e <= n;
            default:
                break
        }
    };
    u.prototype.on = function (e, t, n, r) {
        if (e.addEventListener) {
            e.addEventListener(t, n, r)
        } else if (e.attachEvent) {
            e.attachEvent("on" + t, n)
        }
    };
    u.prototype.off = function (e, t, n, r) {
        if (e.removeEventListener) {
            e.removeEventListener(t, n, r)
        } else if (e.detachEvent) {
            e.detachEvent("on" + t, n)
        }
    };
    u.prototype.trigger = function (t, n, r) {
        var i = {
            item: {
                count: this._items.length,
                index: this.current()
            }
        },
            s = e.camelCase(e.grep(["on", t, r], function (e) {
                return e
            }).join("-").toLowerCase()),
            o = e.Event([t, "owl", r || "carousel"].join(".").toLowerCase(), e.extend({
                relatedTarget: this
            }, i, n));
        if (!this._supress[t]) {
            e.each(this._plugins, function (e, t) {
                if (t.onTrigger) {
                    t.onTrigger(o)
                }
            });
            this.$element.trigger(o);
            if (this.settings && typeof this.settings[s] === "function") {
                this.settings[s].apply(this, o)
            }
        }
        return o
    };
    u.prototype.suppress = function (t) {
        e.each(t, e.proxy(function (e, t) {
            this._supress[t] = true
        }, this))
    };
    u.prototype.release = function (t) {
        e.each(t, e.proxy(function (e, t) {
            delete this._supress[t]
        }, this))
    };
    u.prototype.browserSupport = function () {
        this.support3d = h();
        if (this.support3d) {
            this.transformVendor = c();
            var e = ["transitionend", "webkitTransitionEnd", "transitionend", "oTransitionEnd"];
            this.transitionEndVendor = e[l()];
            this.vendorName = this.transformVendor.replace(/Transform/i, "");
            this.vendorName = this.vendorName !== "" ? "-" + this.vendorName.toLowerCase() + "-" : ""
        }
        this.state.orientation = t.orientation
    };
    e.fn.owlCarousel = function (t) {
        return this.each(function () {
            if (!e(this).data("owlCarousel")) {
                e(this).data("owlCarousel", new u(this, t))
            }
        })
    };
    e.fn.owlCarousel.Constructor = u
})(window.Zepto || window.jQuery, window, document);
(function (e, t, n, r) {
    var i = function (t) {
        this._core = t;
        this._loaded = [];
        this._handlers = {
            "initialized.owl.carousel change.owl.carousel": e.proxy(function (t) {
                if (!t.namespace) {
                    return
                }
                if (!this._core.settings || !this._core.settings.lazyLoad) {
                    return
                }
                if (t.property && t.property.name == "position" || t.type == "initialized") {
                    var n = this._core.settings,
                        r = n.center && Math.ceil(n.items / 2) || n.items,
                        i = n.center && r * -1 || 0,
                        s = (t.property && t.property.value || this._core.current()) + i,
                        o = this._core.clones().length,
                        u = e.proxy(function (e, t) {
                            this.load(t)
                        }, this);
                    while (i++ < r) {
                        this.load(o / 2 + this._core.relative(s));
                        o && e.each(this._core.clones(this._core.relative(s++)), u)
                    }
                }
            }, this)
        };
        this._core.options = e.extend({}, i.Defaults, this._core.options);
        this._core.$element.on(this._handlers)
    };
    i.Defaults = {
        lazyLoad: false
    };
    i.prototype.load = function (n) {
        var r = this._core.$stage.children().eq(n),
            i = r && r.find(".owl-lazy");
        if (!i || e.inArray(r.get(0), this._loaded) > -1) {
            return
        }
        i.each(e.proxy(function (n, r) {
            var i = e(r),
                s, o = t.devicePixelRatio > 1 && i.attr("data-src-retina") || i.attr("data-src");
            this._core.trigger("load", {
                element: i,
                url: o
            }, "lazy");
            if (i.is("img")) {
                i.one("load.owl.lazy", e.proxy(function () {
                    i.css("opacity", 1);
                    this._core.trigger("loaded", {
                        element: i,
                        url: o
                    }, "lazy")
                }, this)).attr("src", o)
            } else {
                s = new Image;
                s.onload = e.proxy(function () {
                    i.css({
                        "background-image": "url(" + o + ")",
                        opacity: "1"
                    });
                    this._core.trigger("loaded", {
                        element: i,
                        url: o
                    }, "lazy")
                }, this);
                s.src = o
            }
        }, this));
        this._loaded.push(r.get(0))
    };
    i.prototype.destroy = function () {
        var e, t;
        for (e in this.handlers) {
            this._core.$element.off(e, this.handlers[e])
        }
        for (t in Object.getOwnPropertyNames(this)) {
            typeof this[t] != "function" && (this[t] = null)
        }
    };
    e.fn.owlCarousel.Constructor.Plugins.Lazy = i
})(window.Zepto || window.jQuery, window, document);
(function (e, t, n, r) {
    var i = function (t) {
        this._core = t;
        this._handlers = {
            "initialized.owl.carousel refreshed.owl.carousel": e.proxy(function () {
                if (this._core.settings.autoHeight) {
                    this.update()
                }
            }, this),
            "changed.owl.carousel": e.proxy(function (e) {
                if (this._core.settings.autoHeight && e.property.name == "position") {
                    this.update()
                }
            }, this),
            "loaded.owl.lazy": e.proxy(function (e) {
                if (this._core.settings.autoHeight && e.element.closest("." + this._core.settings.itemClass) === this._core.$stage.children().eq(this._core.current())) {
                    this.update()
                }
            }, this)
        };
        this._core.options = e.extend({}, i.Defaults, this._core.options);
        this._core.$element.on(this._handlers)
    };
    i.Defaults = {
        autoHeight: false,
        autoHeightClass: "owl-height"
    };
    i.prototype.update = function () {
        this._core.$stage.parent().height(this._core.$stage.children().eq(this._core.current()).height()).addClass(this._core.settings.autoHeightClass)
    };
    i.prototype.destroy = function () {
        var e, t;
        for (e in this._handlers) {
            this._core.$element.off(e, this._handlers[e])
        }
        for (t in Object.getOwnPropertyNames(this)) {
            typeof this[t] != "function" && (this[t] = null)
        }
    };
    e.fn.owlCarousel.Constructor.Plugins.AutoHeight = i
})(window.Zepto || window.jQuery, window, document);
(function (e, t, n, r) {
    var i = function (t) {
        this._core = t;
        this._videos = {};
        this._playing = null;
        this._fullscreen = false;
        this._handlers = {
            "resize.owl.carousel": e.proxy(function (e) {
                if (this._core.settings.video && !this.isInFullScreen()) {
                    e.preventDefault()
                }
            }, this),
            "refresh.owl.carousel changed.owl.carousel": e.proxy(function (e) {
                if (this._playing) {
                    this.stop()
                }
            }, this),
            "prepared.owl.carousel": e.proxy(function (t) {
                var n = e(t.content).find(".owl-video");
                if (n.length) {
                    n.css("display", "none");
                    this.fetch(n, e(t.content))
                }
            }, this)
        };
        this._core.options = e.extend({}, i.Defaults, this._core.options);
        this._core.$element.on(this._handlers);
        this._core.$element.on("click.owl.video", ".owl-video-play-icon", e.proxy(function (e) {
            this.play(e)
        }, this))
    };
    i.Defaults = {
        video: false,
        videoHeight: false,
        videoWidth: false
    };
    i.prototype.fetch = function (e, t) {
        var n = e.attr("data-vimeo-id") ? "vimeo" : "youtube",
            r = e.attr("data-vimeo-id") || e.attr("data-youtube-id"),
            i = e.attr("data-width") || this._core.settings.videoWidth,
            s = e.attr("data-height") || this._core.settings.videoHeight,
            o = e.attr("href");
        if (o) {
            r = o.match(/(http:|https:|)\/\/(player.|www.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com))\/(video\/|embed\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/);
            if (r[3].indexOf("youtu") > -1) {
                n = "youtube"
            } else if (r[3].indexOf("vimeo") > -1) {
                n = "vimeo"
            } else {
                throw new Error("Video URL not supported.")
            }
            r = r[6]
        } else {
            throw new Error("Missing video URL.")
        }
        this._videos[o] = {
            type: n,
            id: r,
            width: i,
            height: s
        };
        t.attr("data-video", o);
        this.thumbnail(e, this._videos[o])
    };
    i.prototype.thumbnail = function (t, n) {
        var r, i, s, o = n.width && n.height ? 'style="width:' + n.width + "px;height:" + n.height + 'px;"' : "",
            u = t.find("img"),
            a = "src",
            f = "",
            l = this._core.settings,
            c = function (e) {
                i = '<div class="owl-video-play-icon"></div>';
                if (l.lazyLoad) {
                    r = '<div class="owl-video-tn ' + f + '" ' + a + '="' + e + '"></div>'
                } else {
                    r = '<div class="owl-video-tn" style="opacity:1;background-image:url(' + e + ')"></div>'
                }
                t.after(r);
                t.after(i)
            };
        t.wrap('<div class="owl-video-wrapper"' + o + "></div>");
        if (this._core.settings.lazyLoad) {
            a = "data-src";
            f = "owl-lazy"
        }
        if (u.length) {
            c(u.attr(a));
            u.remove();
            return false
        }
        if (n.type === "youtube") {
            s = "http://img.youtube.com/vi/" + n.id + "/hqdefault.jpg";
            c(s)
        } else if (n.type === "vimeo") {
            e.ajax({
                type: "GET",
                url: "http://vimeo.com/api/v2/video/" + n.id + ".json",
                jsonp: "callback",
                dataType: "jsonp",
                success: function (e) {
                    s = e[0].thumbnail_large;
                    c(s)
                }
            })
        }
    };
    i.prototype.stop = function () {
        this._core.trigger("stop", null, "video");
        this._playing.find(".owl-video-frame").remove();
        this._playing.removeClass("owl-video-playing");
        this._playing = null
    };
    i.prototype.play = function (t) {
        this._core.trigger("play", null, "video");
        if (this._playing) {
            this.stop()
        }
        var n = e(t.target || t.srcElement),
            r = n.closest("." + this._core.settings.itemClass),
            i = this._videos[r.attr("data-video")],
            s = i.width || "100%",
            o = i.height || this._core.$stage.height(),
            u, a;
        if (i.type === "youtube") {
            u = '<iframe width="' + s + '" height="' + o + '" src="http://www.youtube.com/embed/' + i.id + "?autoplay=1&v=" + i.id + '" frameborder="0" allowfullscreen></iframe>'
        } else if (i.type === "vimeo") {
            u = '<iframe src="http://player.vimeo.com/video/' + i.id + '?autoplay=1" width="' + s + '" height="' + o + '" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'
        }
        r.addClass("owl-video-playing");
        this._playing = r;
        a = e('<div style="height:' + o + "px; width:" + s + 'px" class="owl-video-frame">' + u + "</div>");
        n.after(a)
    };
    i.prototype.isInFullScreen = function () {
        var r = n.fullscreenElement || n.mozFullScreenElement || n.webkitFullscreenElement;
        if (r && e(r).parent().hasClass("owl-video-frame")) {
            this._core.speed(0);
            this._fullscreen = true
        }
        if (r && this._fullscreen && this._playing) {
            return false
        }
        if (this._fullscreen) {
            this._fullscreen = false;
            return false
        }
        if (this._playing) {
            if (this._core.state.orientation !== t.orientation) {
                this._core.state.orientation = t.orientation;
                return false
            }
        }
        return true
    };
    i.prototype.destroy = function () {
        var e, t;
        this._core.$element.off("click.owl.video");
        for (e in this._handlers) {
            this._core.$element.off(e, this._handlers[e])
        }
        for (t in Object.getOwnPropertyNames(this)) {
            typeof this[t] != "function" && (this[t] = null)
        }
    };
    e.fn.owlCarousel.Constructor.Plugins.Video = i
})(window.Zepto || window.jQuery, window, document);
(function (e, t, n, r) {
    var i = function (t) {
        this.core = t;
        this.core.options = e.extend({}, i.Defaults, this.core.options);
        this.swapping = true;
        this.previous = r;
        this.next = r;
        this.handlers = {
            "change.owl.carousel": e.proxy(function (e) {
                if (e.property.name == "position") {
                    this.previous = this.core.current();
                    this.next = e.property.value
                }
            }, this),
            "drag.owl.carousel dragged.owl.carousel translated.owl.carousel": e.proxy(function (e) {
                this.swapping = e.type == "translated"
            }, this),
            "translate.owl.carousel": e.proxy(function (e) {
                if (this.swapping && (this.core.options.animateOut || this.core.options.animateIn)) {
                    this.swap()
                }
            }, this)
        };
        this.core.$element.on(this.handlers)
    };
    i.Defaults = {
        animateOut: false,
        animateIn: false
    };
    i.prototype.swap = function () {
        if (this.core.settings.items !== 1 || !this.core.support3d) {
            return
        }
        this.core.speed(0);
        var t, n = e.proxy(this.clear, this),
            r = this.core.$stage.children().eq(this.previous),
            i = this.core.$stage.children().eq(this.next),
            s = this.core.settings.animateIn,
            o = this.core.settings.animateOut;
        if (this.core.current() === this.previous) {
            return
        }
        if (o) {
            t = this.core.coordinates(this.previous) - this.core.coordinates(this.next);
            r.css({
                left: t + "px"
            }).addClass("animated owl-animated-out").addClass(o).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", n)
        }
        if (s) {
            i.addClass("animated owl-animated-in").addClass(s).one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", n)
        }
    };
    i.prototype.clear = function (t) {
        e(t.target).css({
            left: ""
        }).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut);
        this.core.transitionEnd()
    };
    i.prototype.destroy = function () {
        var e, t;
        for (e in this.handlers) {
            this.core.$element.off(e, this.handlers[e])
        }
        for (t in Object.getOwnPropertyNames(this)) {
            typeof this[t] != "function" && (this[t] = null)
        }
    };
    e.fn.owlCarousel.Constructor.Plugins.Animate = i
})(window.Zepto || window.jQuery, window, document);
(function (e, t, n, r) {
    var i = function (t) {
        this.core = t;
        this.core.options = e.extend({}, i.Defaults, this.core.options);
        this.handlers = {
            "translated.owl.carousel refreshed.owl.carousel": e.proxy(function () {
                this.autoplay()
            }, this),
            "play.owl.autoplay": e.proxy(function (e, t, n) {
                this.play(t, n)
            }, this),
            "stop.owl.autoplay": e.proxy(function () {
                this.stop()
            }, this),
            "mouseover.owl.autoplay": e.proxy(function () {
                if (this.core.settings.autoplayHoverPause) {
                    this.pause()
                }
            }, this),
            "mouseleave.owl.autoplay": e.proxy(function () {
                if (this.core.settings.autoplayHoverPause) {
                    this.autoplay()
                }
            }, this)
        };
        this.core.$element.on(this.handlers)
    };
    i.Defaults = {
        autoplay: false,
        autoplayTimeout: 5e3,
        autoplayHoverPause: false,
        autoplaySpeed: false
    };
    i.prototype.autoplay = function () {
        if (this.core.settings.autoplay && !this.core.state.videoPlay) {
            t.clearInterval(this.interval);
            this.interval = t.setInterval(e.proxy(function () {
                this.play()
            }, this), this.core.settings.autoplayTimeout)
        } else {
            t.clearInterval(this.interval)
        }
    };
    i.prototype.play = function (e, r) {
        if (n.hidden === true) {
            return
        }
        if (this.core.state.isTouch || this.core.state.isScrolling || this.core.state.isSwiping || this.core.state.inMotion) {
            return
        }
        if (this.core.settings.autoplay === false) {
            t.clearInterval(this.interval);
            return
        }
        this.core.next(this.core.settings.autoplaySpeed)
    };
    i.prototype.stop = function () {
        t.clearInterval(this.interval)
    };
    i.prototype.pause = function () {
        t.clearInterval(this.interval)
    };
    i.prototype.destroy = function () {
        var e, n;
        t.clearInterval(this.interval);
        for (e in this.handlers) {
            this.core.$element.off(e, this.handlers[e])
        }
        for (n in Object.getOwnPropertyNames(this)) {
            typeof this[n] != "function" && (this[n] = null)
        }
    };
    e.fn.owlCarousel.Constructor.Plugins.autoplay = i
})(window.Zepto || window.jQuery, window, document);
(function (e, t, n, r) {
    "use strict";
    var i = function (t) {
        this._core = t;
        this._initialized = false;
        this._pages = [];
        this._controls = {};
        this._templates = [];
        this.$element = this._core.$element;
        this._overrides = {
            next: this._core.next,
            prev: this._core.prev,
            to: this._core.to
        };
        this._handlers = {
            "prepared.owl.carousel": e.proxy(function (t) {
                if (this._core.settings.dotsData) {
                    this._templates.push(e(t.content).find("[data-dot]").andSelf("[data-dot]").attr("data-dot"))
                }
            }, this),
            "add.owl.carousel": e.proxy(function (t) {
                if (this._core.settings.dotsData) {
                    this._templates.splice(t.position, 0, e(t.content).find("[data-dot]").andSelf("[data-dot]").attr("data-dot"))
                }
            }, this),
            "remove.owl.carousel prepared.owl.carousel": e.proxy(function (e) {
                if (this._core.settings.dotsData) {
                    this._templates.splice(e.position, 1)
                }
            }, this),
            "change.owl.carousel": e.proxy(function (e) {
                if (e.property.name == "position") {
                    if (!this._core.state.revert && !this._core.settings.loop && this._core.settings.navRewind) {
                        var t = this._core.current(),
                            n = this._core.maximum(),
                            r = this._core.minimum();
                        e.data = e.property.value > n ? t >= n ? r : n : e.property.value < r ? n : e.property.value
                    }
                }
            }, this),
            "changed.owl.carousel": e.proxy(function (e) {
                if (e.property.name == "position") {
                    this.draw()
                }
            }, this),
            "refreshed.owl.carousel": e.proxy(function () {
                if (!this._initialized) {
                    this.initialize();
                    this._initialized = true
                }
                this._core.trigger("refresh", null, "navigation");
                this.update();
                this.draw();
                this._core.trigger("refreshed", null, "navigation")
            }, this)
        };
        this._core.options = e.extend({}, i.Defaults, this._core.options);
        this.$element.on(this._handlers)
    };
    i.Defaults = {
        nav: false,
        navRewind: true,
        navText: ["prev", "next"],
        navSpeed: false,
        navElement: "div",
        navContainer: false,
        navContainerClass: "owl-nav",
        navClass: ["owl-prev", "owl-next"],
        slideBy: 1,
        dotClass: "owl-dot",
        dotsClass: "owl-dots",
        dots: true,
        dotsEach: false,
        dotData: false,
        dotsSpeed: false,
        dotsContainer: false,
        controlsClass: "owl-controls"
    };
    i.prototype.initialize = function () {
        var t, n, r = this._core.settings;
        if (!r.dotsData) {
            this._templates = [e("<div>").addClass(r.dotClass).append(e("<span>")).prop("outerHTML")]
        }
        if (!r.navContainer || !r.dotsContainer) {
            this._controls.$container = e("<div>").addClass(r.controlsClass).appendTo(this.$element)
        }
        this._controls.$indicators = r.dotsContainer ? e(r.dotsContainer) : e("<div>").hide().addClass(r.dotsClass).appendTo(this._controls.$container);
        this._controls.$indicators.on("click", "div", e.proxy(function (t) {
            var n = e(t.target).parent().is(this._controls.$indicators) ? e(t.target).index() : e(t.target).parent().index();
            t.preventDefault();
            this.to(n, r.dotsSpeed)
        }, this));
        t = r.navContainer ? e(r.navContainer) : e("<div>").addClass(r.navContainerClass).prependTo(this._controls.$container);
        this._controls.$next = e("<" + r.navElement + ">");
        this._controls.$previous = this._controls.$next.clone();
        this._controls.$previous.addClass(r.navClass[0]).html(r.navText[0]).hide().prependTo(t).on("click", e.proxy(function (e) {
            this.prev(r.navSpeed)
        }, this));
        this._controls.$next.addClass(r.navClass[1]).html(r.navText[1]).hide().appendTo(t).on("click", e.proxy(function (e) {
            this.next(r.navSpeed)
        }, this));
        for (n in this._overrides) {
            this._core[n] = e.proxy(this[n], this)
        }
    };
    i.prototype.destroy = function () {
        var e, t, n, r;
        for (e in this._handlers) {
            this.$element.off(e, this._handlers[e])
        }
        for (t in this._controls) {
            this._controls[t].remove()
        }
        for (r in this.overides) {
            this._core[r] = this._overrides[r]
        }
        for (n in Object.getOwnPropertyNames(this)) {
            typeof this[n] != "function" && (this[n] = null)
        }
    };
    i.prototype.update = function () {
        var e, t, n, r = this._core.settings,
            i = this._core.clones().length / 2,
            s = i + this._core.items().length,
            o = r.center || r.autoWidth || r.dotData ? 1 : r.dotsEach || r.items;
        if (r.slideBy !== "page") {
            r.slideBy = Math.min(r.slideBy, r.items)
        }
        if (r.dots || r.slideBy == "page") {
            this._pages = [];
            for (e = i, t = 0, n = 0; e < s; e++) {
                if (t >= o || t === 0) {
                    this._pages.push({
                        start: e - i,
                        end: e - i + o - 1
                    });
                    t = 0, ++n
                }
                t += this._core.mergers(this._core.relative(e))
            }
        }
    };
    i.prototype.draw = function () {
        var t, n, r = "",
            i = this._core.settings,
            s = this._core.$stage.children(),
            o = this._core.relative(this._core.current());
        if (i.nav && !i.loop && !i.navRewind) {
            this._controls.$previous.toggleClass("disabled", o <= 0);
            this._controls.$next.toggleClass("disabled", o >= this._core.maximum())
        }
        this._controls.$previous.toggle(i.nav);
        this._controls.$next.toggle(i.nav);
        if (i.dots) {
            t = this._pages.length - this._controls.$indicators.children().length;
            if (i.dotData && t !== 0) {
                for (n = 0; n < this._controls.$indicators.children().length; n++) {
                    r += this._templates[this._core.relative(n)]
                }
                this._controls.$indicators.html(r)
            } else if (t > 0) {
                r = (new Array(t + 1)).join(this._templates[0]);
                this._controls.$indicators.append(r)
            } else if (t < 0) {
                this._controls.$indicators.children().slice(t).remove()
            }
            this._controls.$indicators.find(".active").removeClass("active");
            this._controls.$indicators.children().eq(e.inArray(this.current(), this._pages)).addClass("active")
        }
        this._controls.$indicators.toggle(i.dots)
    };
    i.prototype.onTrigger = function (t) {
        var n = this._core.settings;
        t.page = {
            index: e.inArray(this.current(), this._pages),
            count: this._pages.length,
            size: n && (n.center || n.autoWidth || n.dotData ? 1 : n.dotsEach || n.items)
        }
    };
    i.prototype.current = function () {
        var t = this._core.relative(this._core.current());
        return e.grep(this._pages, function (e) {
            return e.start <= t && e.end >= t
        }).pop()
    };
    i.prototype.getPosition = function (t) {
        var n, r, i = this._core.settings;
        if (i.slideBy == "page") {
            n = e.inArray(this.current(), this._pages);
            r = this._pages.length;
            t ? ++n : --n;
            n = this._pages[(n % r + r) % r].start
        } else {
            n = this._core.relative(this._core.current());
            r = this._core.items().length;
            t ? n += i.slideBy : n -= i.slideBy
        }
        return n
    };
    i.prototype.next = function (t) {
        e.proxy(this._overrides.to, this._core)(this.getPosition(true), t)
    };
    i.prototype.prev = function (t) {
        e.proxy(this._overrides.to, this._core)(this.getPosition(false), t)
    };
    i.prototype.to = function (t, n, r) {
        var i;
        if (!r) {
            i = this._pages.length;
            e.proxy(this._overrides.to, this._core)(this._pages[(t % i + i) % i].start, n)
        } else {
            e.proxy(this._overrides.to, this._core)(t, n)
        }
    };
    e.fn.owlCarousel.Constructor.Plugins.Navigation = i
})(window.Zepto || window.jQuery, window, document);
(function (e, t, n, r) {
    "use strict";
    var i = function (n) {
        this._core = n;
        this._hashes = {};
        this.$element = this._core.$element;
        this._handlers = {
            "initialized.owl.carousel": e.proxy(function () {
                if (this._core.settings.startPosition == "URLHash") {
                    e(t).trigger("hashchange.owl.navigation")
                }
            }, this),
            "prepared.owl.carousel": e.proxy(function (t) {
                var n = e(t.content).find("[data-hash]").andSelf("[data-hash]").attr("data-hash");
                this._hashes[n] = t.content
            }, this)
        };
        this._core.options = e.extend({}, i.Defaults, this._core.options);
        this.$element.on(this._handlers);
        e(t).on("hashchange.owl.navigation", e.proxy(function () {
            var e = t.location.hash.substring(1),
                n = this._core.$stage.children(),
                r = this._hashes[e] && n.index(this._hashes[e]) || 0;
            if (!e) {
                return false
            }
            this._core.to(r, false, true)
        }, this))
    };
    i.Defaults = {
        URLhashListener: false
    };
    i.prototype.destroy = function () {
        var n, r;
        e(t).off("hashchange.owl.navigation");
        for (n in this._handlers) {
            this._core.$element.off(n, this._handlers[n])
        }
        for (r in Object.getOwnPropertyNames(this)) {
            typeof this[r] != "function" && (this[r] = null)
        }
    };
    e.fn.owlCarousel.Constructor.Plugins.Hash = i
})(window.Zepto || window.jQuery, window, document);
(function (e, t, n, r) {
    function o(t, n) {
        this.element = t;
        this.options = e.extend({}, s, n);
        this._defaults = s;
        this._name = i;
        if (this.options.icon) {
            this.populateIcons()
        }
        if (this.options.defaultActive) {
            this.defaultActive()
        }
        this.init()
    }
    var i = "UMaccordion",
        s = {
            containerElem: ".accordion",
            clickElem: ".accordion__title",
            contentElem: ".accordion__content",
            defaultActive: true,
            icon: true
        };
    o.prototype = {
        init: function () {
            var t = this;
            e(this.options.clickElem, this.options.containerElem).click(function (n) {
                n.preventDefault();
                var r = e(this).parents(t.options.containerElem);
                var i = e(this).parent();
                if (!e(t.options.contentElem).is(":animated")) {
                    t.toggleActive(r);
                    if (!i.hasClass("is-active")) {
                        e(t.options.contentElem, i).slideDown(function () {
                            i.addClass("is-active")
                        })
                    }
                } else {
                    return 0
                }
            })
        },
        defaultActive: function () {
            var t = this;
            e.each(e(t.element), function (t, n) {
                e(n).children(":first").addClass("is-active")
            })
        },
        toggleActive: function (t) {
            if (e(this.options.contentElem, t).is(":visible")) {
                e(this.options.contentElem, t).slideUp(function () {
                    e(this).parent().removeClass("is-active")
                })
            }
        },
        populateIcons: function () {
            var t = this;
            if (e(this.element).length != 0) {
                e.each(e(t.element), function (e, n) {
                    t.addIcon(n)
                })
            }
        },
        addIcon: function (t) {
            var n;
            var r;
            var i;
            var s = e(this.options.clickElem, t);
            e.each(s, function (t, s) {
                n = parseInt(e(s).css("font-size"));
                i = e("i", s);
                if (n <= 18) {
                    r = n + (20 - n) + 10
                } else {
                    r = n + 10
                }
                if (i.length !== 0) {
                    i.css("height", n + "px");
                    e(s).css("padding-right", r + "px")
                } else {
                    e(s).append('<i style="height: ' + n + "px; line-height: " + n + 'px" class="icon-down-open-big"></i>').css("padding-right", r + "px")
                }
            })
        }
    };
    e.fn[i] = function (t) {
        return this.each(function () {
            if (!e.data(this, "plugin_" + i)) {
                e.data(this, "plugin_" + i, new o(this, t))
            }
        })
    }
})(jQuery, window, document);
(function (e) {
    e.UMselectbox = function (t) {
        this.name = "UM Custom select box";
        this.version = "1.0";
        this.author = "Nurul Arif @ Z-SQUARED";
        this.date = "7/7/2014";
        var n = {
            options: e.extend({
                mainElem: ".c-select",
                captionElem: ".c-select__caption",
                listElem: ".c-select__list"
            }, t),
            init: function () {
                this.addListener()
            },
            addListener: function () {
                var t = this;
                e(this.options.mainElem).click(function (t) {
                    e(this).toggleClass("is-active");
                    t.stopPropagation()
                });
                e(this.options.listElem).click(function (n) {
                    var r = e(this).data("value");
                    var i = e(this).parents(t.options.mainElem).attr("id");
                    e(this).parents(t.options.mainElem).find(t.options.captionElem).text(r)
                });
                e(document).click(function () {
                    if (e(t.options.mainElem).hasClass("is-active")) {
                        e(t.options.mainElem).removeClass("is-active")
                    }
                })
            }
        };
        return n.init()
    }
})(jQuery);
(function (e) {
    e.UMglobalNav = function (t) {
        this.name = "UM Global navigation - mobile";
        this.version = "1.0";
        this.author = "Nurul Arif @ XM Malaysia";
        this.date = "23/1/2014";
        var n = {
            options: e.extend({
                containerElem: ".nav--global--mobile",
                clickElem: ".nav__list",
                contentElem: ".nav__sub"
            }, t),
            init: function () {
                this.addListener()
            },
            addListener: function () {
                var t = this;
                e(this.options.clickElem, this.options.containerElem).click(function (n) {
                    var r = e(this).index();
                    if (!e(this).hasClass("is-active")) {
                        t.closeNav();
                        e(t.options.clickElem).removeClass("is-active");
                        e(this).addClass("is-active");
                        t.openNav(r)
                    } else {
                        e(this).removeClass("is-active");
                        t.closeNav()
                    }
                })
            },
            openNav: function (t) {
                e(this.options.containerElem).find(this.options.contentElem).eq(t).slideDown()
            },
            closeNav: function () {
                e(this.options.contentElem, this.options.containerElem).slideUp()
            }
        };
        return n.init()
    }
})(jQuery);
(function (e) {
    e.jPanelMenu = function (t) {
        var n;
        var r;
        var i;
        var s;
        var o;
        var u;
        var a = true;
        var f = null;
        var l = 0;
        var c = false;
        var h = false;
        var p = {
            options: e.extend({
                wrapperElem: ".l--navFixed-wrapper",
                mainNav: ".nav--main",
                subNav: ".nav__sub",
                linkElem: ".nav__list > a",
                backBtnElem: ".nav__btn--back"
            }, t),
            init: function () {
                p.checkMobile();
                p.setGlobal();
                p.setWrapperHeight();
                p.setMainNavHeight(0);
                p.setListeners();
                p.initScroller();
                p.checkActive()
            },
            checkMobile: function () {
                h = window.innerWidth < 1025 ? true : false
            },
            setGlobal: function () {
                u = e(window);
                n = e(this.options.wrapperElem);
                r = e(this.options.mainNav);
                i = e(this.options.subNav);
                s = e(this.options.linkElem, this.options.mainNav);
                o = e(this.options.backBtnElem)
            },
            setWrapperHeight: function () {
                var e = u.height() - 110;
                n.height(e)
            },
            getMainNavHeight: function () {
                return f = r.height()
            },
            setMainNavHeight: function (e) {
                var t = this;
                if (e == 0) {
                    if (h) {
                        f = "auto"
                    } else {
                        this.getMainNavHeight()
                    }
                    r.height(f)
                } else {
                    r.height(e);
                    setTimeout(function () {
                        if (l === 0) {
                            t.calculateHeight();
                            l++
                        } else {
                            return false
                        }
                    }, 700);
                    n.scroller("reset")
                }
            },
            setListeners: function () {
                var t = this;
                s.click(function (n) {
                    if (!c) {
                        var r = e(this).siblings("ul:first");
                        if (r.length > 0) {
                            t.toggleSub(r);
                            c = true
                        } else {
                            return false
                        }
                    } else {
                        return false
                    }
                });
                o.click(function (e) {
                    if (!c) {
                        i.removeClass("is-active");
                        r.height(f);
                        setTimeout(function () {
                            t.resetNavScroller();
                            l = 0
                        }, 700)
                    } else {
                        return false
                    }
                });
                u.resize(function (e) {
                    t.setWrapperHeight();
                    t.getMainNavHeight();
                    t.resetNavScroller()
                })
            },
            toggleSub: function (e) {
                var t = this;
                var n = e;
                n.addClass("is-active");
                t.calculateHeight();
                setTimeout(function () {
                    c = false
                }, 700);
            },
            calculateHeight: function () {
                var e = this.getActiveElem("get");
                var t;
                t = e.height();
                p.setMainNavHeight(t)
            },
            checkActive: function () {
                var e = this.getActiveElem("check");
                if (e) {
                    this.calculateHeight()
                } else {
                    return false
                }
            },
            initScroller: function () {
                n.scroller()
            },
            resetNavScroller: function () {
                return n.scroller("reset")
            },
            getActiveElem: function (e) {
                var t = e;
                if (e === "get") {
                    return r.find(".nav__sub.is-active")
                } else {
                    return r.find(".nav__sub").hasClass("is-active")
                }
            }
        };
        return {
            init: p.init,
            refresh: p.calculateHeight,
            resetScroller: p.resetNavScroller
        }
    }
})(jQuery);
(function (e) {
    e.UMquicklinks = function (t) {
        this.name = "UM Smart Sticky";
        this.version = "1.0";
        this.author = "Nurul Arif @ Z-SQUARED";
        this.date = "24/7/2014";
        var n;
        var r;
        var i;
        var s;
        var o;
        var u;
        var a;
        var f;
        var l;
        var c;
        var h = null;
        var p = false;
        var d = false;
        var v = {
            options: e.extend({
                rootElem: ".l--body",
                mainElem: ".quicklinks",
                footerElem: "footer"
            }, t),
            init: function () {
                this.checkLayout();
                this.setGlobal();
                this.checkMobile();
                this.setListeners()
            },
            setGlobal: function () {
                n = e(this.options.mainElem);
                r = e(document);
                i = e(window);
                s = e(this.options.footerElem);
                o = n.parents(this.options.rootElem).width();
                u = r.width();
                a = n.outerWidth();
                f = n.outerHeight();
                c = s.offset().top;
                if (h === "landing") {
                    l = n.parents(".l--landing").offset().top
                } else {
                    l = n.parents(".l--content").offset().top
                }
            },
            setListeners: function () {
                var e = this;
                i.on("scroll", function () {
                    if (!p) {
                        e.calcQuicklinks()
                    }
                });
                i.on("resize", function () {
                    e.reCalc();
                    e.checkMobile();
                    if (d) {
                        e.posRight()
                    }
                })
            },
            reCalc: function () {
                o = n.parents(this.options.rootElem).width();
                u = r.width();
                c = s.offset().top;
                f = n.outerHeight();
                if (h === "landing") {
                    l = n.parents(".l--landing").offset().top
                } else {
                    l = n.parents(".l--content").offset().top
                }
            },
            checkMobile: function () {
                if (window.innerWidth < 768) {
                    p = true;
                    this.posTopBottom("top")
                } else {
                    p = false
                }
            },
            checkLayout: function () {
                if (e(".l--landing").length > 0) {
                    h = "landing"
                } else {
                    h = "content"
                }
            },
            calcQuicklinks: function () {
                var e = r.scrollTop();
                var t = e + f;
                c = s.offset().top;
                if (e >= l) {
                    if (t < c) {
                        d = true;
                        this.posTopBottom("top")
                    } else {
                        d = false;
                        this.posTopBottom("bottom")
                    }
                } else {
                    d = false
                }
                this.toggleFixed()
            },
            toggleFixed: function () {
                if (d) {
                    n.addClass("is-fixed");
                    this.posRight(true)
                } else {
                    n.removeClass("is-fixed");
                    this.posRight(false)
                }
            },
            posRight: function (e) {
                var t = (u - o) / 2;
                var r;
                return e ? n.css("right", t + "px") : n.css("right", 0)
            },
            posTopBottom: function (e) {
                if (e === "bottom") {
                    return n.css({
                        top: "auto",
                        bottom: 0
                    })
                } else {
                    return n.css({
                        top: 0,
                        bottom: "auto"
                    })
                }
            }
        };
        return v.init()
    }
})(jQuery);
(function (e) {
    e.UMpinIt = function (t) {
        this.name = "UM Pin it";
        this.version = "1.0";
        this.author = "Nurul Arif @ Z-SQUARED";
        this.date = "24/7/2014";
        var n = 0;
        var r = {
            options: e.extend({
                mainElem: ".popup",
                popupElem: ".quicklinks__popup",
                pinnerElem: ".pinIt__pinner"
            }, t),
            init: function () {
                this.loadSession();
                this.setListener()
            },
            loadSession: function () {
                if (sessionStorage.first_course_value) {
                    console.log("first: " + sessionStorage.first_course_label);
                    this.addCourse("session", "first_course", sessionStorage.first_course_label)
                }
                if (sessionStorage.second_course_value) {
                    console.log("second: " + sessionStorage.second_course_label);
                    this.addCourse("session", "second_course", sessionStorage.second_course_label)
                }
            },
            setListener: function () {
                var t = this;
                e(document).on("click", function (n) {
                    if (!e(n.target).closest(t.options.mainElem).length) {
                        e(t.options.popupElem).removeClass("is-active")
                    }
                });
                e(this.options.pinnerElem).click(function (n) {
                    var r = this;
                    var i;
                    var s;
                    var o = e(this).parents(".pinIt__list").data("key");
                    if (e(".course_detail").length !== 0) {
                        i = e(".course_detail").data("value");
                        s = e(".course_detail").text();
                        console.log(i, s);
                        if (!t.checkCourse(o, i, s)) {
                            console.log("add course");
                            t.addCourse("click", r, s)
                        } else {
                            console.log("duplicates");
                            return false
                        }
                    } else {
                        return false
                    }
                });
                e(".pinIt__close").click(function (n) {
                    var r = this;
                    var i = e(this).parents(".pinIt__list").data("key");
                    t.removeCourse(r, i)
                });
                e(".compare-btn").click(function (n) {
                    t.requestCompare();
                    e(t.options.popupElem).removeClass("is-active")
                });
                e(".comparison__close").click(function (t) {
                    e(".l--comparison").removeClass("is-active");
                    e(".comparison__wrapper").empty()
                })
            },
            checkCourse: function (e, t, n) {
                var r = t;
                if (sessionStorage.first_course_value === r) {
                    return true
                } else if (sessionStorage.second_course_value === r) {
                    return true
                } else {
                    if (e === "first_course") {
                        sessionStorage.first_course_value = t;
                        sessionStorage.first_course_label = n
                    } else {
                        sessionStorage.second_course_value = t;
                        sessionStorage.second_course_label = n
                    }
                }
                return false
            },
            addCourse: function (t, r, i) {
                if (t === "session") {
                    e("[data-key='" + r + "']").find(".pinIt__label").text(i);
                    e("[data-key='" + r + "']").find(".pinIt__course").addClass("is-selected")
                } else {
                    e(r).siblings(".pinIt__course").find(".pinIt__label").text(i);
                    e(r).siblings(".pinIt__course").addClass("is-selected")
                }
                n++;
                this.checkCompare()
            },
            removeCourse: function (t, r) {
                e(t).parent().removeClass("is-selected");
                if (r === "first_course") {
                    sessionStorage.removeItem("first_course_value");
                    sessionStorage.removeItem("first_course_label")
                } else {
                    sessionStorage.removeItem("second_course_value");
                    sessionStorage.removeItem("second_course_label")
                }
                n--;
                this.checkCompare()
            },
            checkCompare: function () {
                console.log(n);
                if (n === 2) {
                    e(".compare-btn").prop("disabled", false)
                } else {
                    e(".compare-btn").prop("disabled", true)
                }
            },
            requestCompare: function () {
                var t = this;
                e.ajax({
                    url: this.getURL(),
                    type: "GET",
                    success: function (e, n) {
                        t.populateCourse(e)
                    },
                    error: function () {
                        console.log("error")
                    },
                    complete: function (e, t) {
                        if (t !== "success") {
                            return 0
                        } else { }
                    }
                })
            },
            populateCourse: function (t) {
                var n = e("#course-template").html();
                var r;
                console.log(t);
                r = Mustache.to_html(n, t);
                e(".comparison__wrapper").append(r);
                e(".l--comparison").addClass("is-active")
            },
            getURL: function () {
                var e = window.location.host;
                var t;
                t = "https://" + e + "/services/compare-course.aspx?first=" + sessionStorage.first_course_value + "&second=" + sessionStorage.second_course_value;
                return t
            }
        };
        return r.init()
    }
})(jQuery);
(function (e) {
    e.UMmap = function (t) {
        this.name = "UM Pin it";
        this.version = "1.0";
        this.author = "Nurul Arif @ Z-SQUARED";
        this.date = "24/7/2014";
        var n;
        var r = [];
        var i = new google.maps.LatLngBounds;
        var s = [];
        var o = [];
        var u = [];
        var a = [];
        var f = [];
        var l = [];
        var c = false;
        var h = function (e, t, n, r, i, s, o, u, a, f, l, c) {
            this.category = e;
            this.name = t;
            this.address = n;
            this.tel = r;
            this.fax = i;
            this.email = s;
            this.website = o;
            this.lat = u;
            this.lng = a;
            this.extra = f;
            this.icon = l;
            this.marker = c
        };
        var p = {
            options: e.extend({
                filterElem: ".map__filter",
                listElem: ".map__list",
                closeElem: ".map__extra__close"
            }, t),
            init: function () {
                this.initMap();
                this.setListener();
                this.updateFilters("load")
            },
            setListener: function () {
                var t = this;
                e(this.options.filterElem).on(Gumby.click, function (n) {
                    if (e(this).find("input").is(":checked")) {
                        t.updateFilters("add")
                    } else {
                        t.removeMarkers(e(this).find("input").val())
                    }
                    return false
                });
                e(this.options.closeElem).click(function (n) {
                    e(this).parent().removeClass("is-active");
                    for (var r = 0; r < a.length; r++) {
                        a[r].setVisible(true)
                    }
                    t.mapFitBounds()
                });
                e(window).resize(function () {
                    if (!c) {
                        t.mapFitBounds()
                    } else {
                        return false
                    }
                })
            },
            initMap: function () {
                var e = {
                    zoom: 13,
                    scrollwheel: false,
                    center: new google.maps.LatLng(3.1244115318420955, 101.69490004940032),
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    panControl: false,
                    zoomControl: true,
                    mapTypeControl: true,
                    scaleControl: false,
                    streetViewControl: false,
                    overviewMapControl: false
                };
                n = new google.maps.Map(document.getElementById("map"), e);
                this.checkGeo()
            },
            mapFitBounds: function () {
                c = false;
                return n.fitBounds(i)
            },
            checkGeo: function () {
                var e = this;
                var t = function (t) {
                    navigator.geolocation.received = true;
                    console.log("geolocation succeeded");
                    if (navigator.geolocation.timedout === false || typeof navigator.geolocation.timedout === "undefined") {
                        e.success(t)
                    } else {
                        return false
                    }
                };
                var n = function (t) {
                    navigator.geolocation.received = true;
                    console.log("geolocation failed");
                    !navigator.geolocation.timedout ? e.error(t) : null
                };
                var r = function () {
                    navigator.geolocation.timedout = true;
                    console.log("geolocation timed out");
                    !navigator.geolocation.received ? e.error() : null
                };
                if (navigator.geolocation) {
                    navigator.geolocation.retrievePermission = function (t, n, r, i) {
                        this.received = false;
                        this.timedout = false;
                        this.getCurrentPosition.apply(this, arguments);
                        if (i) {
                            setTimeout(i.callback, i.offset || 5e3)
                        }
                    };
                    navigator.geolocation.retrievePermission(t, n, {}, {
                        offset: 5e3,
                        callback: r
                    })
                } else {
                    console.log("geolocation is not supported")
                }
            },
            success: function (e) {
                var t = this;
                r[0] = e.coords.latitude;
                r[1] = e.coords.longitude;
                var s = new google.maps.LatLng(r[0], r[1]);
                var o = new google.maps.Marker({
                    position: s,
                    title: "Forever alone",
                    map: n,
                    icon: "/img/markers/img-marker-you.png",
                    animation: google.maps.Animation.DROP
                });
                i.extend(s);
                n.fitBounds(i)
            },
            error: function () {
                console.log("geolocation disabled")
            },
            updateFilters: function (t) {
                var n = this;
                var r = e(this.options.filterElem).find("input");
                o.length = 0;
                e.each(r, function (t, n) {
                    if (e(n).prop("checked")) {
                        o.push(e(n).val())
                    }
                });
                this.compareOutlets(t)
            },
            compareOutlets: function (t) {
                var n = this;
                var r = [];
                if (t == "load") {
                    s.length = 0;
                    e.each(o, function (e, t) {
                        s.push(t)
                    });
                    if (s.length > 0) {
                        n.loadMarkers(s)
                    } else {
                        return false
                    }
                } else if (t == "add") {
                    e.grep(o, function (t) {
                        if (e.inArray(t, s) == -1) {
                            r.push(t);
                            s.push(t)
                        }
                    });
                    n.loadMarkers(r)
                } else if (t == "remove") {
                    e.grep(s, function (t) {
                        if (e.inArray(t, o) == -1) {
                            e.each(s, function (e, n) {
                                if (n == t) {
                                    s.splice(e, 1)
                                }
                            })
                        }
                    })
                } else {
                    return false
                }
            },
            removeMarkers: function (e) {
                var t = this;
                var n = e;
                if (a) {
                    for (var r = 0; r < a.length; r++) {
                        if (a[r].id == n) {
                            a[r].setMap(null);
                            a.splice(r, 1);
                            r--
                        }
                    }
                }
                if (f) {
                    for (var i = 0; i < f.length; i++) {
                        if (f[i].category == n) {
                            f.splice(i, 1);
                            i--
                        }
                    }
                }
                t.populateAddress();
                t.updateFilters("remove")
            },
            loadMarkers: function (t) {
                var n = this;
                e.ajax({
                    url: this.getURL(t),
                    type: "GET",
                    cache: false,
                    beforeSend: function () {
                        n.clearError();
                        u.length = 0;
                        e(".map__loader").addClass("is-active")
                    },
                    success: function (t, n) {
                        e.each(t, function (e, t) {
                            u[e] = new h(t.category, t.name, t.address, t.tel, t.fax, t.email, t.website, t.lat, t.lng, t.extra_info, t.icon_path, t.marker_path)
                        })
                    },
                    error: function () {
                        n.displayError("There was an error loading the places.")
                    },
                    complete: function (t, r) {
                        e(".map__loader").removeClass("is-active");
                        if (u.length > 0 && r !== "error") {
                            n.clearError();
                            e.each(u, function (e, t) {
                                f.push(t)
                            });
                            n.displayMarkers();
                            n.populateAddress()
                        } else if (u.length == 0 && r !== "error") {
                            n.displayError("There are no places available")
                        } else {
                            return
                        }
                    }
                })
            },
            displayError: function (t) {
                e(".map__places-wrapper").append("<li class='warning label'>" + t + "</li>")
            },
            clearError: function () {
                e(".warning", ".map__places-wrapper").remove()
            },
            displayMarkers: function () {
                var t = this;
                var s = a.length;
                i = new google.maps.LatLngBounds;
                if (r.length > 0) {
                    i.extend(new google.maps.LatLng(r[0], r[1]))
                }
                e.each(u, function (e, r) {
                    var o = new google.maps.Marker({
                        position: new google.maps.LatLng(r.lat, r.lng),
                        id: r.category,
                        title: r.name,
                        map: n,
                        icon: r.marker,
                        animation: google.maps.Animation.DROP
                    });
                    google.maps.event.addListener(o, "click", function () {
                        t.openInfo(o, s + e)
                    });
                    i.extend(new google.maps.LatLng(r.lat, r.lng));
                    n.fitBounds(i);
                    a.push(o)
                })
            },
            populateAddress: function () {
                var t = e("#map-list").html();
                var n;
                l.length = 0;
                e.each(f, function (e, r) {
                    n = Mustache.to_html(t, r);
                    l.push(n)
                });
                this.displayAddress()
            },
            displayAddress: function () {
                var t = this;
                var n = 0;
                var r;
                e(".map__places-wrapper").empty();
                e.each(l, function (t, n) {
                    e(".map__places-wrapper").append(n)
                });
                r = e(this.options.listElem);
                r.click(function () {
                    var n = e(this).index(t.options.listElem);
                    t.openInfo(a[n], n)
                })
            },
            openInfo: function (e, t) {
                for (var r = 0; r < a.length; r++) {
                    if (r !== t) {
                        a[r].setVisible(false)
                    }
                }
                n.setCenter(e.getPosition());
                n.setZoom(16);
                c = true;
                this.populateExtraInfo(t)
            },
            populateExtraInfo: function (t) {
                var n = e("#map-info").html();
                var i;
                e(".map__extra_wrapper").empty();
                i = Mustache.to_html(n, f[t]);
                e(".map__extra_wrapper").append(i).parents(".map__extra").addClass("is-active");
                if (r.length != 0) {
                    e(".map__directions").attr("href", "http://maps.google.com/?saddr=" + r[0] + "," + r[1] + "&daddr=" + f[t].lat + "," + f[t].lng)
                } else {
                    e(".map__directions").attr("href", "http://maps.google.com/?saddr=&daddr=" + f[t].lat + "," + f[t].lng)
                }
            },
            getURL: function (e) {
                var t = window.location.host;
                var n = e.length;
                var r;
                switch (n) {
                    case 2:
                        r = "https://" + t + "/services/campus_map.aspx?cat1=" + e[0] + "&cat2=" + e[1];
                        break;
                    case 3:
                        r = "https://" + t + "/services/campus_map.aspx?cat1=" + e[0] + "&cat2=" + e[1] + "&cat3=" + e[2];
                        break;
                    case 4:
                        r = "https://" + t + "/services/campus_map.aspx?cat1=" + e[0] + "&cat2=" + e[1] + "&cat3=" + e[2] + "&cat4=" + e[3];
                        break;
                    case 5:
                        r = "https://" + t + "/services/campus_map.aspx?cat1=" + e[0] + "&cat2=" + e[1] + "&cat3=" + e[2] + "&cat4=" + e[3] + "&cat5=" + e[4];
                        break;
                    default:
                        r = "https://" + t + "/services/campus_map.aspx?cat1=" + e;
                        break
                }
                return r
            }
        };
        return p.init()
    }
})(jQuery)